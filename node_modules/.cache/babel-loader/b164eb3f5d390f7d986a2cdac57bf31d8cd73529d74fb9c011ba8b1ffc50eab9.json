{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage.jsx';\n// import LoginPage from './pages/LoginPage';\n// import RegistrationPage from './pages/RegistrationPage';\n// import DiaryPage from './pages/DiaryPage';\n// import CalculatorPage from './pages/CalculatorPage';\nimport Header from './components/Header/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconst express = require('express');\nconst logger = require('morgan');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\nconst usersRouter = require('../routes/routes.jsx');\nconst path = require('path');\nconst app = express();\napp.use('/avatars', express.static(path.join(__dirname, 'public', 'avatars')));\n\n// Middleware\napp.use(logger('dev'));\napp.use(cors());\napp.use(express.json());\n\n// Rute pentru utilizatori\napp.use('/api/users', usersRouter);\n\n// Conectare la MongoDB\nconst DB_URI = process.env.DB_URI;\nmongoose.connection.once('open', () => {\n  console.log('MongoDB connection established');\n});\n\n// Conectare la MongoDB\nmongoose.connect(DB_URI).then(() => {\n  console.log('Database connection successful');\n}).catch(err => {\n  console.error('Database connection error:', err);\n  process.exit(1);\n});\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(() => {\n    console.log('MongoDB connection closed due to app termination');\n    process.exit(0);\n  });\n});\n\n// const port = process.env.PORT || 3000;\n// app.listen(port, () => {\n//   console.log(`Server running at http://localhost:${port}`);\n// });\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","MainPage","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","require","config","express","logger","cors","mongoose","usersRouter","path","app","use","static","join","__dirname","json","DB_URI","process","env","connection","once","console","log","connect","then","catch","err","error","exit","on","close","App","children","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/App.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage.jsx';\r\n// import LoginPage from './pages/LoginPage';\r\n// import RegistrationPage from './pages/RegistrationPage';\r\n// import DiaryPage from './pages/DiaryPage';\r\n// import CalculatorPage from './pages/CalculatorPage';\r\nimport Header from './components/Header/Header';\r\nrequire('dotenv').config();\r\n\r\nconst express = require('express');\r\nconst logger = require('morgan');\r\nconst cors = require('cors');\r\nconst mongoose = require('mongoose');\r\nconst usersRouter = require('../routes/routes.jsx');\r\nconst path = require('path');\r\n\r\nconst app = express();\r\napp.use('/avatars', express.static(path.join(__dirname, 'public', 'avatars')));\r\n\r\n// Middleware\r\napp.use(logger('dev'));\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Rute pentru utilizatori\r\napp.use('/api/users', usersRouter);\r\n\r\n// Conectare la MongoDB\r\nconst DB_URI = process.env.DB_URI;\r\nmongoose.connection.once('open', () => {\r\n  console.log('MongoDB connection established');\r\n});\r\n\r\n// Conectare la MongoDB\r\nmongoose.connect(DB_URI)\r\n  .then(() => {\r\n    console.log('Database connection successful');\r\n  })\r\n  .catch((err) => {\r\n    console.error('Database connection error:', err);\r\n    process.exit(1);\r\n  });\r\n\r\nprocess.on('SIGINT', () => {\r\n  mongoose.connection.close(() => {\r\n    console.log('MongoDB connection closed due to app termination');\r\n    process.exit(0);\r\n  });\r\n});\r\n\r\n\r\n// const port = process.env.PORT || 3000;\r\n// app.listen(port, () => {\r\n//   console.log(`Server running at http://localhost:${port}`);\r\n// });\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainPage />} />\r\n        {/* <Route path=\"/login\" element={<LoginPage />} />\r\n        <Route path=\"/register\" element={<RegistrationPage />} />\r\n        <Route path=\"/diary\" element={<DiaryPage />} />\r\n        <Route path=\"/calculator\" element={<CalculatorPage />} /> */}\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChDC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAE1B,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMK,QAAQ,GAAGL,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMM,WAAW,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMQ,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrBM,GAAG,CAACC,GAAG,CAAC,UAAU,EAAEP,OAAO,CAACQ,MAAM,CAACH,IAAI,CAACI,IAAI,CAACC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;;AAE9E;AACAJ,GAAG,CAACC,GAAG,CAACN,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBK,GAAG,CAACC,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;AACfI,GAAG,CAACC,GAAG,CAACP,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAL,GAAG,CAACC,GAAG,CAAC,YAAY,EAAEH,WAAW,CAAC;;AAElC;AACA,MAAMQ,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACF,MAAM;AACjCT,QAAQ,CAACY,UAAU,CAACC,IAAI,CAAC,MAAM,EAAE,MAAM;EACrCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC;;AAEF;AACAf,QAAQ,CAACgB,OAAO,CAACP,MAAM,CAAC,CACrBQ,IAAI,CAAC,MAAM;EACVH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;EACdL,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;EAChDT,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC;AAEJX,OAAO,CAACY,EAAE,CAAC,QAAQ,EAAE,MAAM;EACzBtB,QAAQ,CAACY,UAAU,CAACW,KAAK,CAAC,MAAM;IAC9BT,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IAC/DL,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;;AAEA,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEhC,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACEjC,OAAA,CAACL,MAAM;MAAAsC,QAAA,eACLjC,OAAA,CAACJ,KAAK;QAACc,IAAI,EAAC,GAAG;QAACwB,OAAO,eAAElC,OAAA,CAACH,QAAQ;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnC;EAAC,gBACT,CAAC;AAEP,CAAC;AAACC,EAAA,GAZIP,GAAG;AAcT,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}