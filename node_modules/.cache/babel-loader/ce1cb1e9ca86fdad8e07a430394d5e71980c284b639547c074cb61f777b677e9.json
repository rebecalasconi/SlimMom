{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DiaryAddProductForm.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList,\n  allForbiddenFoods,\n  selectedDate,\n  updateCalories\n}) => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [grams, setGrams] = useState('');\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [allFoods, setAllFoods] = useState([]);\n  const [filteredFoods, setFilteredFoods] = useState([]);\n\n  // Fetch forbidden foods\n  useEffect(() => {\n    const fetchForbiddenFoods = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n        setAllFoods(response.data); // Stochează obiectele întregi\n      } catch (error) {\n        console.error('Error fetching forbidden foods:', error);\n      }\n    };\n    fetchForbiddenFoods();\n  }, []);\n\n  // Filtrare după allForbiddenFoods (stringuri)\n  useEffect(() => {\n    setFilteredForbiddenFoods(allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allForbiddenFoods]);\n\n  // Filtrare după allFoods (obiecte cu titlu și calorii)\n  useEffect(() => {\n    setFilteredFoods(allFoods.filter(food => food.title.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allFoods]);\n\n  // Submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!grams || !selectedFood) return;\n    const calories = selectedFood.calories * grams / 100;\n    const newProduct = {\n      id: Date.now(),\n      date: selectedDate,\n      name: selectedFood.title,\n      grams,\n      calories: Math.round(calories)\n    };\n    setProductList(prevList => [...prevList, newProduct]);\n    addProductToList(newProduct);\n    updateCalories(Math.round(calories));\n    setProductName('');\n    setGrams('');\n    setSelectedFood(null);\n    setSearchTerm('');\n  };\n\n  // Selectează produsul\n  const handleFoodSelect = food => {\n    setProductName(food.title);\n    setSelectedFood(food);\n    setSearchTerm(food.title);\n    setFilteredForbiddenFoods([]);\n  };\n\n  // Șterge produsul\n  const handleRemoveProduct = (id, calories) => {\n    setProductList(prevList => prevList.filter(product => product.id !== id));\n    updateCalories(-calories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"productForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"searchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults\",\n          children: filteredForbiddenFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSearchTerm(food),\n            children: food\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grams\",\n        value: grams,\n        onChange: e => setGrams(e.target.value),\n        className: \"gramsInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.grams, \"g - \", product.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveProduct(product.id, product.calories),\n          className: \"removeButton\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: filteredFoods.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleFoodSelect(food),\n        children: [food.title, \" - \", food.calories, \" kcal/100g\"]\n      }, food._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryAddProductForm, \"Jpo3jU7xokaDqAoI4ZuhLgw5S4s=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './DiaryAddProductForm.css';\n\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\n//   const [productName, setProductName] = useState('');\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data); // Salvează obiectele complete în state\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n\n//   useEffect(() => {\n//     const filtered = allFoods.filter((food) =>\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredFoods(filtered);\n//   }, [searchTerm, allFoods]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!grams || !selectedFood) return;\n\n//     const calories = (selectedFood.calories * grams) / 100;\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams,\n//       calories: Math.round(calories),\n//     };\n\n//     addProductToList(newProduct);\n//     updateCalories(Math.round(calories));\n\n//     setProductName('');\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//   };\n\n//   const handleFoodSelect = (food) => {\n//     setProductName(food.title);\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredFoods.map((food) => (\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                 {food.title} - {food.calories} kcal/100g\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"submitBtn\">\n//           Add product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","allForbiddenFoods","selectedDate","updateCalories","_s","productName","setProductName","grams","setGrams","selectedFood","setSelectedFood","searchTerm","setSearchTerm","filteredForbiddenFoods","setFilteredForbiddenFoods","productList","setProductList","allFoods","setAllFoods","filteredFoods","setFilteredFoods","fetchForbiddenFoods","response","get","data","error","console","filter","food","toLowerCase","includes","title","handleSubmit","e","preventDefault","calories","newProduct","id","Date","now","date","name","Math","round","prevList","handleFoodSelect","handleRemoveProduct","product","children","onSubmit","className","length","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","required","_id","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DiaryAddProductForm.css';\r\nimport axios from 'axios';\r\n\r\nconst DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate, updateCalories }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [grams, setGrams] = useState('');\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  \r\n  const [allFoods, setAllFoods] = useState([]);\r\n  const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n  // Fetch forbidden foods\r\n  useEffect(() => {\r\n    const fetchForbiddenFoods = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n        setAllFoods(response.data); // Stochează obiectele întregi\r\n      } catch (error) {\r\n        console.error('Error fetching forbidden foods:', error);\r\n      }\r\n    };\r\n    fetchForbiddenFoods();\r\n  }, []);\r\n\r\n  // Filtrare după allForbiddenFoods (stringuri)\r\n  useEffect(() => {\r\n    setFilteredForbiddenFoods(\r\n      allForbiddenFoods.filter((food) =>\r\n        food.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchTerm, allForbiddenFoods]);\r\n\r\n  // Filtrare după allFoods (obiecte cu titlu și calorii)\r\n  useEffect(() => {\r\n    setFilteredFoods(\r\n      allFoods.filter((food) =>\r\n        food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchTerm, allFoods]);\r\n\r\n  // Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!grams || !selectedFood) return;\r\n\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n\r\n    const newProduct = {\r\n      id: Date.now(),\r\n      date: selectedDate,\r\n      name: selectedFood.title,\r\n      grams,\r\n      calories: Math.round(calories),\r\n    };\r\n\r\n    setProductList((prevList) => [...prevList, newProduct]);\r\n    addProductToList(newProduct);\r\n    updateCalories(Math.round(calories));\r\n\r\n    setProductName('');\r\n    setGrams('');\r\n    setSelectedFood(null);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  // Selectează produsul\r\n  const handleFoodSelect = (food) => {\r\n    setProductName(food.title);\r\n    setSelectedFood(food);\r\n    setSearchTerm(food.title);\r\n    setFilteredForbiddenFoods([]);\r\n  };\r\n\r\n  // Șterge produsul\r\n  const handleRemoveProduct = (id, calories) => {\r\n    setProductList((prevList) => prevList.filter((product) => product.id !== id));\r\n    updateCalories(-calories);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"productForm\">\r\n        <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter product name...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"searchInput\"\r\n          />\r\n          <ul className=\"searchResults\">\r\n            {filteredForbiddenFoods.map((food, index) => (\r\n              <li key={index} onClick={() => setSearchTerm(food)}>{food}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Grams\"\r\n          value={grams}\r\n          onChange={(e) => setGrams(e.target.value)}\r\n          className=\"gramsInput\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"addButton\">+</button>\r\n      </form>\r\n\r\n      <ul className=\"productList\">\r\n        {productList.map((product) => (\r\n          <li key={product.id}>\r\n            {product.name} - {product.grams}g - {product.calories} kcal\r\n            <button onClick={() => handleRemoveProduct(product.id, product.calories)} className=\"removeButton\">x</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className=\"productList\">\r\n        {filteredFoods.map((food) => (\r\n          <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n            {food.title} - {food.calories} kcal/100g\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './DiaryAddProductForm.css';\r\n\r\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\r\n//   const [productName, setProductName] = useState('');\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data); // Salvează obiectele complete în state\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = allFoods.filter((food) =>\r\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredFoods(filtered);\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!grams || !selectedFood) return;\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams,\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct);\r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setProductName('');\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setProductName(food.title);\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredFoods.map((food) => (\r\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                 {food.title} - {food.calories} kcal/100g\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"submitBtn\">\r\n//           Add product\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n"],"mappings":"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C,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxD,EAAA,CAhIIL,mBAAmB;AAAAmE,EAAA,GAAnBnE,mBAAmB;AAkIzB,eAAeA,mBAAmB;;AAGlC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}