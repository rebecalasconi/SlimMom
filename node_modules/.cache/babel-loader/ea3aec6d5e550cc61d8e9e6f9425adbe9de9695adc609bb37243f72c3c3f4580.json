{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n//   import './DiaryAddProductForm.css';\n\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\n//     const [productName, setProductName] = useState('');\n//     const [grams, setGrams] = useState('');\n//     const [foodData, setFoodData] = useState([]);\n//     const [selectedFood, setSelectedFood] = useState(null);\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n\n//     // useEffect(() => {\n//     //   if (productName.length > 2) {\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\n//     //         }\n//     //       }, [productName]);\n\n//     useEffect(() => {\n//       setFilteredForbiddenFoods(\n//         allForbiddenFoods.filter((food) =>\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\n//         )\n//       );\n//     }, [searchTerm, allForbiddenFoods]);\n\n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n//       if (!grams || !selectedFood) return;\n\n//       const calories = (selectedFood.calories * grams) / 100;\n\n//       addProductToList({\n//         date: selectedDate,\n//         name: selectedFood.title,\n//         grams,\n//         calories: Math.round(calories),\n//       });\n\n//       setProductName('');\n//       setGrams('');\n//       setSelectedFood(null);\n//     };\n\n//     const handleFoodSelect = (food) => {\n//       setProductName(food);\n//       setSearchTerm(food);\n//     }\n\n//     return (\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//               <div className=\"date-picker-container\">\n//           {/* <label htmlFor=\"date\">Date:</label> */}\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\n//         </div>\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredForbiddenFoods.map((food, index) => (\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//         />\n//           <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n//     );\n//   };\n\n//   export default DiaryAddProductForm;","map":{"version":3,"names":[],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n//   import './DiaryAddProductForm.css';\r\n  \r\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\r\n//     const [productName, setProductName] = useState('');\r\n//     const [grams, setGrams] = useState('');\r\n//     const [foodData, setFoodData] = useState([]);\r\n//     const [selectedFood, setSelectedFood] = useState(null);\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  \r\n//     // useEffect(() => {\r\n//     //   if (productName.length > 2) {\r\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\r\n//     //         }\r\n//     //       }, [productName]);\r\n  \r\n//     useEffect(() => {\r\n//       setFilteredForbiddenFoods(\r\n//         allForbiddenFoods.filter((food) =>\r\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\r\n//         )\r\n//       );\r\n//     }, [searchTerm, allForbiddenFoods]);\r\n  \r\n//     const handleSubmit = (e) => {\r\n//       e.preventDefault();\r\n//       if (!grams || !selectedFood) return;\r\n  \r\n//       const calories = (selectedFood.calories * grams) / 100;\r\n  \r\n//       addProductToList({\r\n//         date: selectedDate,\r\n//         name: selectedFood.title,\r\n//         grams,\r\n//         calories: Math.round(calories),\r\n//       });\r\n  \r\n//       setProductName('');\r\n//       setGrams('');\r\n//       setSelectedFood(null);\r\n//     };\r\n  \r\n//     const handleFoodSelect = (food) => {\r\n//       setProductName(food);\r\n//       setSearchTerm(food);\r\n//     }\r\n  \r\n//     return (\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//               <div className=\"date-picker-container\">\r\n//           {/* <label htmlFor=\"date\">Date:</label> */}\r\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\r\n//         </div>\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredForbiddenFoods.map((food, index) => (\r\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//         />\r\n//           <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n//     );\r\n//   };\r\n  \r\n//   export default DiaryAddProductForm;\r\n  "],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}