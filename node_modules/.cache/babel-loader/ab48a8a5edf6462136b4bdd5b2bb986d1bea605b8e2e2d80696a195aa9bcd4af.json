{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n//   import './DiaryAddProductForm.css';\n\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\n//     const [productName, setProductName] = useState('');\n//     const [grams, setGrams] = useState('');\n//     const [foodData, setFoodData] = useState([]);\n//     const [selectedFood, setSelectedFood] = useState(null);\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n\n//     // useEffect(() => {\n//     //   if (productName.length > 2) {\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\n//     //         }\n//     //       }, [productName]);\n\n//     useEffect(() => {\n//       setFilteredForbiddenFoods(\n//         allForbiddenFoods.filter((food) =>\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\n//         )\n//       );\n//     }, [searchTerm, allForbiddenFoods]);\n\n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n//       if (!grams || !selectedFood) return;\n\n//       const calories = (selectedFood.calories * grams) / 100;\n\n//       addProductToList({\n//         date: selectedDate,\n//         name: selectedFood.title,\n//         grams,\n//         calories: Math.round(calories),\n//       });\n\n//       setProductName('');\n//       setGrams('');\n//       setSelectedFood(null);\n//     };\n\n//     const handleFoodSelect = (food) => {\n//       setProductName(food);\n//       setSearchTerm(food);\n//     }\n//     const handleRemoveProduct = (id, calories) => {\n//         setProductList((prevList) => prevList.filter((product) => product.id !== id));\n//         updateCalories(-calories);\n//       };\n\n//     return (\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//               <div className=\"date-picker-container\">\n//           {/* <label htmlFor=\"date\">Date:</label> */}\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\n//         </div>\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredForbiddenFoods.map((food, index) => (\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//         />\n//           <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n\n//     );\n//   };\n\n//   export default DiaryAddProductForm;\nimport React, { useState, useEffect } from 'react';\nimport './DiaryAddProductForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList,\n  allForbiddenFoods,\n  selectedDate,\n  updateCalories\n}) => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [grams, setGrams] = useState('');\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n  const [productList, setProductList] = useState([]);\n  useEffect(() => {\n    setFilteredForbiddenFoods(allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allForbiddenFoods]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Verificăm dacă există produsul selectat și gramajul\n    if (!grams || !selectedFood) return;\n\n    // Calculăm caloriile pentru produsul introdus\n    const calories = selectedFood.calories * grams / 100;\n    console.log();\n\n    // Creăm obiectul pentru produsul nou\n    const newProduct = {\n      id: Date.now(),\n      // Creăm un ID unic folosind timestamp\n      date: selectedDate,\n      name: selectedFood,\n      grams,\n      calories: Math.round(calories)\n    };\n\n    // Adăugăm produsul în lista locală\n    setProductList(prevList => [...prevList, newProduct]);\n\n    // Trimit produsul adăugat către funcția părinte\n    addProductToList(newProduct);\n\n    // Actualizăm caloriile\n    updateCalories(Math.round(calories));\n\n    // Resetăm formularul\n    setProductName('');\n    setGrams('');\n    setSelectedFood(null);\n    setSearchTerm('');\n  };\n  const handleFoodSelect = food => {\n    setProductName(food);\n    setSelectedFood(food);\n    setSearchTerm(food);\n    setFilteredForbiddenFoods([]); // Resetează lista de sugestii după selecția unui produs\n  };\n  const handleRemoveProduct = (id, calories) => {\n    // Eliminăm produsul din lista locală\n    setProductList(prevList => prevList.filter(product => product.id !== id));\n    // Reducem caloriile\n    updateCalories(-calories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"productForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"searchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults\",\n          children: filteredForbiddenFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFoodSelect(food),\n            children: food\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grams\",\n        value: grams,\n        onChange: e => setGrams(e.target.value),\n        className: \"gramsInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"productItem\",\n        children: [product.name, \" - \", product.grams, \"g - \", product.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveProduct(product.id, product.calories),\n          className: \"removeButton\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryAddProductForm, \"agFp0WqyHr14sblzM6vnAU2w6h0=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","allForbiddenFoods","selectedDate","updateCalories","_s","productName","setProductName","grams","setGrams","selectedFood","setSelectedFood","searchTerm","setSearchTerm","filteredForbiddenFoods","setFilteredForbiddenFoods","productList","setProductList","filter","food","toLowerCase","includes","handleSubmit","e","preventDefault","calories","console","log","newProduct","id","Date","now","date","name","Math","round","prevList","handleFoodSelect","handleRemoveProduct","product","children","onSubmit","className","length","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","required","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n//   import './DiaryAddProductForm.css';\r\n  \r\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\r\n//     const [productName, setProductName] = useState('');\r\n//     const [grams, setGrams] = useState('');\r\n//     const [foodData, setFoodData] = useState([]);\r\n//     const [selectedFood, setSelectedFood] = useState(null);\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  \r\n//     // useEffect(() => {\r\n//     //   if (productName.length > 2) {\r\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\r\n//     //         }\r\n//     //       }, [productName]);\r\n  \r\n//     useEffect(() => {\r\n//       setFilteredForbiddenFoods(\r\n//         allForbiddenFoods.filter((food) =>\r\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\r\n//         )\r\n//       );\r\n//     }, [searchTerm, allForbiddenFoods]);\r\n  \r\n//     const handleSubmit = (e) => {\r\n//       e.preventDefault();\r\n//       if (!grams || !selectedFood) return;\r\n  \r\n//       const calories = (selectedFood.calories * grams) / 100;\r\n  \r\n//       addProductToList({\r\n//         date: selectedDate,\r\n//         name: selectedFood.title,\r\n//         grams,\r\n//         calories: Math.round(calories),\r\n//       });\r\n  \r\n//       setProductName('');\r\n//       setGrams('');\r\n//       setSelectedFood(null);\r\n//     };\r\n  \r\n//     const handleFoodSelect = (food) => {\r\n//       setProductName(food);\r\n//       setSearchTerm(food);\r\n//     }\r\n//     const handleRemoveProduct = (id, calories) => {\r\n//         setProductList((prevList) => prevList.filter((product) => product.id !== id));\r\n//         updateCalories(-calories);\r\n//       };\r\n  \r\n//     return (\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//               <div className=\"date-picker-container\">\r\n//           {/* <label htmlFor=\"date\">Date:</label> */}\r\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\r\n//         </div>\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredForbiddenFoods.map((food, index) => (\r\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//         />\r\n//           <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n    \r\n//     );\r\n//   };\r\n  \r\n//   export default DiaryAddProductForm;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './DiaryAddProductForm.css';\r\n\r\nconst DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate, updateCalories }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [grams, setGrams] = useState('');\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredForbiddenFoods(\r\n      allForbiddenFoods.filter((food) =>\r\n        food.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchTerm, allForbiddenFoods]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Verificăm dacă există produsul selectat și gramajul\r\n    if (!grams || !selectedFood) return;\r\n\r\n    // Calculăm caloriile pentru produsul introdus\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n    console.log()\r\n\r\n    // Creăm obiectul pentru produsul nou\r\n    const newProduct = {\r\n      id: Date.now(), // Creăm un ID unic folosind timestamp\r\n      date: selectedDate,\r\n      name: selectedFood,\r\n      grams,\r\n      calories: Math.round(calories),\r\n    };\r\n\r\n    // Adăugăm produsul în lista locală\r\n    setProductList((prevList) => [...prevList, newProduct]);\r\n\r\n    // Trimit produsul adăugat către funcția părinte\r\n    addProductToList(newProduct);\r\n\r\n    // Actualizăm caloriile\r\n    updateCalories(Math.round(calories));\r\n\r\n    // Resetăm formularul\r\n    setProductName('');\r\n    setGrams('');\r\n    setSelectedFood(null);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const handleFoodSelect = (food) => {\r\n    setProductName(food);\r\n    setSelectedFood(food);\r\n    setSearchTerm(food);\r\n    setFilteredForbiddenFoods([]); // Resetează lista de sugestii după selecția unui produs\r\n  };\r\n\r\n  const handleRemoveProduct = (id, calories) => {\r\n    // Eliminăm produsul din lista locală\r\n    setProductList((prevList) => prevList.filter((product) => product.id !== id));\r\n    // Reducem caloriile\r\n    updateCalories(-calories);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"productForm\">\r\n        <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter product name...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"searchInput\"\r\n          />\r\n          <ul className=\"searchResults\">\r\n            {filteredForbiddenFoods.map((food, index) => (\r\n              <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Grams\"\r\n          value={grams}\r\n          onChange={(e) => setGrams(e.target.value)}\r\n          className=\"gramsInput\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"addButton\">+</button>\r\n      </form>\r\n\r\n      <ul className=\"productList\">\r\n        {productList.map((product) => (\r\n          <li key={product.id} className=\"productItem\">\r\n            {product.name} - {product.grams}g - {product.calories} kcal\r\n            <button onClick={() => handleRemoveProduct(product.id, product.calories)} className=\"removeButton\">x</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,iBAAiB;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdkB,yBAAyB,CACvBb,iBAAiB,CAACgB,MAAM,CAAEC,IAAI,IAC5BA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACT,UAAU,CAACQ,WAAW,CAAC,CAAC,CACtD,CACF,CAAC;EACH,CAAC,EAAE,CAACR,UAAU,EAAEV,iBAAiB,CAAC,CAAC;EAEnC,MAAMoB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAChB,KAAK,IAAI,CAACE,YAAY,EAAE;;IAE7B;IACA,MAAMe,QAAQ,GAAIf,YAAY,CAACe,QAAQ,GAAGjB,KAAK,GAAI,GAAG;IACtDkB,OAAO,CAACC,GAAG,CAAC,CAAC;;IAEb;IACA,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,IAAI,EAAE7B,YAAY;MAClB8B,IAAI,EAAEvB,YAAY;MAClBF,KAAK;MACLiB,QAAQ,EAAES,IAAI,CAACC,KAAK,CAACV,QAAQ;IAC/B,CAAC;;IAED;IACAR,cAAc,CAAEmB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAER,UAAU,CAAC,CAAC;;IAEvD;IACA3B,gBAAgB,CAAC2B,UAAU,CAAC;;IAE5B;IACAxB,cAAc,CAAC8B,IAAI,CAACC,KAAK,CAACV,QAAQ,CAAC,CAAC;;IAEpC;IACAlB,cAAc,CAAC,EAAE,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZE,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMwB,gBAAgB,GAAIlB,IAAI,IAAK;IACjCZ,cAAc,CAACY,IAAI,CAAC;IACpBR,eAAe,CAACQ,IAAI,CAAC;IACrBN,aAAa,CAACM,IAAI,CAAC;IACnBJ,yBAAyB,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMuB,mBAAmB,GAAGA,CAACT,EAAE,EAAEJ,QAAQ,KAAK;IAC5C;IACAR,cAAc,CAAEmB,QAAQ,IAAKA,QAAQ,CAAClB,MAAM,CAAEqB,OAAO,IAAKA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC7E;IACAzB,cAAc,CAAC,CAACqB,QAAQ,CAAC;EAC3B,CAAC;EAED,oBACE1B,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAM0C,QAAQ,EAAEnB,YAAa;MAACoB,SAAS,EAAC,aAAa;MAAAF,QAAA,gBACnDzC,OAAA;QAAK2C,SAAS,EAAE,wBAAwB9B,UAAU,IAAIE,sBAAsB,CAAC6B,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAH,QAAA,gBACxGzC,OAAA;UACE6C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAElC,UAAW;UAClBmC,QAAQ,EAAGxB,CAAC,IAAKV,aAAa,CAACU,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;UAC/CJ,SAAS,EAAC;QAAa;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFrD,OAAA;UAAI2C,SAAS,EAAC,eAAe;UAAAF,QAAA,EAC1B1B,sBAAsB,CAACuC,GAAG,CAAC,CAAClC,IAAI,EAAEmC,KAAK,kBACtCvD,OAAA;YAAgBwD,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAAClB,IAAI,CAAE;YAAAqB,QAAA,EAAErB;UAAI,GAAnDmC,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmD,CAClE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNrD,OAAA;QACE6C,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEtC,KAAM;QACbuC,QAAQ,EAAGxB,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;QAC1CJ,SAAS,EAAC,YAAY;QACtBc,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFrD,OAAA;QAAQ6C,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEPrD,OAAA;MAAI2C,SAAS,EAAC,aAAa;MAAAF,QAAA,EACxBxB,WAAW,CAACqC,GAAG,CAAEd,OAAO,iBACvBxC,OAAA;QAAqB2C,SAAS,EAAC,aAAa;QAAAF,QAAA,GACzCD,OAAO,CAACN,IAAI,EAAC,KAAG,EAACM,OAAO,CAAC/B,KAAK,EAAC,MAAI,EAAC+B,OAAO,CAACd,QAAQ,EAAC,OACtD,eAAA1B,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACC,OAAO,CAACV,EAAE,EAAEU,OAAO,CAACd,QAAQ,CAAE;UAACiB,SAAS,EAAC,cAAc;UAAAF,QAAA,EAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFtGb,OAAO,CAACV,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAvGIL,mBAAmB;AAAAyD,EAAA,GAAnBzD,mBAAmB;AAyGzB,eAAeA,mBAAmB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}