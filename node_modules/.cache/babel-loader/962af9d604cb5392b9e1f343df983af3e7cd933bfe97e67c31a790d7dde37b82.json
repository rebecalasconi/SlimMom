{"ast":null,"code":"const createError = require(\"http-errors\");\nconst jwt = require(\"jsonwebtoken\");\nconst User = require(\"../../models/Users\");\nrequire('dotenv').config();\nconst {\n  JWT_SECRET\n} = process.env;\nconst auth = async (req, _, next) => {\n  try {\n    const {\n      authorization = \"\"\n    } = req.headers;\n    const [bearer, token] = authorization.split(\" \");\n    console.log('JWT_SECRET:', process.env.JWT_SECRET);\n    if (bearer !== \"Bearer\" || !token) {\n      throw createError(401, \"Not authorized\");\n    }\n    const {\n      id\n    } = jwt.verify(token, JWT_SECRET);\n    console.log('User ID extracted from token:', id);\n    if (!id || typeof id !== 'string') {\n      throw createError(400, \"Invalid token ID\");\n    }\n    console.log('User ID:', id);\n    let user;\n    try {\n      // Verificăm dacă User este corect definit\n      console.log('User model:', User);\n      user = await User.findOne({\n        _id: id\n      });\n      if (!user) {\n        console.log('User not found for ID:', id);\n        throw createError(404, \"User not found\");\n      }\n    } catch (err) {\n      console.error('Error when fetching user by ID:', err);\n      throw createError(500, \"Server error while fetching user\");\n    }\n    console.log('User found:', user);\n    if (String(user._id) !== id) {\n      console.log('ID mismatch. User ID in DB:', user._id, 'ID from token:', id);\n      throw createError(401, \"Not authorized\");\n    }\n    if (user.token !== token) {\n      console.log('Token mismatch. Token in DB:', user.token, 'Token from request:', token);\n      throw createError(401, \"Not authorized\");\n    }\n    req.user = user;\n    next();\n  } catch (error) {\n    console.error('Error in auth middleware:', error);\n    if (!error.status) {\n      error.status = 401;\n    }\n    next(error);\n  }\n};\nmodule.exports = auth;","map":{"version":3,"names":["createError","require","jwt","User","config","JWT_SECRET","process","env","auth","req","_","next","authorization","headers","bearer","token","split","console","log","id","verify","user","findOne","_id","err","error","String","status","module","exports"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/middleware/auth.js"],"sourcesContent":["const createError = require(\"http-errors\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst User = require(\"../../models/Users\");\r\nrequire('dotenv').config();\r\n\r\nconst { JWT_SECRET } = process.env;\r\n\r\nconst auth = async (req, _, next) => {\r\n  try {\r\n    const { authorization = \"\" } = req.headers;\r\n    const [bearer, token] = authorization.split(\" \");\r\n    console.log('JWT_SECRET:', process.env.JWT_SECRET);\r\n\r\n    if (bearer !== \"Bearer\" || !token) {\r\n      throw createError(401, \"Not authorized\");\r\n    }\r\n\r\n    const { id } = jwt.verify(token, JWT_SECRET);\r\n    console.log('User ID extracted from token:', id);\r\n\r\n    if (!id || typeof id !== 'string') {\r\n      throw createError(400, \"Invalid token ID\");\r\n    }\r\n\r\n    console.log('User ID:', id);\r\n\r\n    let user;\r\n    try {\r\n      // Verificăm dacă User este corect definit\r\n      console.log('User model:', User);\r\n      \r\n      user = await User.findOne({ _id: id });\r\n\r\n      if (!user) {\r\n        console.log('User not found for ID:', id);\r\n        throw createError(404, \"User not found\");\r\n      }\r\n    } catch (err) {\r\n      console.error('Error when fetching user by ID:', err);\r\n      throw createError(500, \"Server error while fetching user\");\r\n    }\r\n\r\n    console.log('User found:', user);\r\n\r\n    if (String(user._id) !== id) {\r\n      console.log('ID mismatch. User ID in DB:', user._id, 'ID from token:', id);\r\n      throw createError(401, \"Not authorized\");\r\n    }\r\n\r\n    if (user.token !== token) {\r\n      console.log('Token mismatch. Token in DB:', user.token, 'Token from request:', token);\r\n      throw createError(401, \"Not authorized\");\r\n    }\r\n\r\n    req.user = user;\r\n    next();\r\n  } catch (error) {\r\n    console.error('Error in auth middleware:', error);\r\n    if (!error.status) {\r\n      error.status = 401;\r\n    }\r\n    next(error);\r\n  }\r\n};\r\n\r\nmodule.exports = auth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}