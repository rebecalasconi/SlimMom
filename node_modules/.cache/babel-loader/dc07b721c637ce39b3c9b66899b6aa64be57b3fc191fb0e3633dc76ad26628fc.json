{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./DiaryAddProductForm.css\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DiaryAddProductForm=_ref=>{let{addProductToList,allForbiddenFoods,selectedDate,updateCalories,productList=[],removeProduct}=_ref;const[grams,setGrams]=useState(\"\");const[selectedFood,setSelectedFood]=useState(null);const[searchTerm,setSearchTerm]=useState(\"\");const[allFoods,setAllFoods]=useState([]);const[filteredFoods,setFilteredFoods]=useState([]);const[showModal,setShowModal]=useState(false);const[isMobile,setIsMobile]=useState(window.innerWidth<=768);const[isDesktop,setIsDesktop]=useState(window.innerWidth>768);useEffect(()=>{const handleResize=()=>{setIsDesktop(window.innerWidth>768);};window.addEventListener(\"resize\",handleResize);return()=>window.removeEventListener(\"resize\",handleResize);},[]);useEffect(()=>{if(showModal){document.body.classList.add(\"modalOpen\");}else{document.body.classList.remove(\"modalOpen\");}},[showModal]);// Actualizează starea când fereastra se redimensionează\nuseEffect(()=>{const handleResize=()=>{setIsMobile(window.innerWidth<=768);};window.addEventListener(\"resize\",handleResize);return()=>window.removeEventListener(\"resize\",handleResize);},[]);useEffect(()=>{const fetchForbiddenFoods=async()=>{try{const response=await axios.get(\"http://localhost:5000/dailycalorieintake/forbiddenFoods\");setAllFoods(response.data);}catch(error){console.error(\"Error fetching forbidden foods:\",error);}};fetchForbiddenFoods();},[]);useEffect(()=>{setFilteredFoods(allFoods.filter(food=>food.title.toLowerCase().includes(searchTerm.toLowerCase())));},[searchTerm,allFoods]);const handleSubmit=e=>{e.preventDefault();if(!grams||!selectedFood){console.warn(\"Please select a food and enter grams.\");return;}const calories=selectedFood.calories*grams/100;const newProduct={id:Date.now(),date:selectedDate,name:selectedFood.title,grams:parseInt(grams,10),calories:Math.round(calories)};addProductToList(newProduct);updateCalories(Math.round(calories));setGrams(\"\");setSelectedFood(null);setSearchTerm(\"\");setShowModal(false);};const handleFoodSelect=food=>{setSelectedFood(food);setSearchTerm(food.title);setFilteredFoods([]);};const handleRemoveProduct=(id,calories)=>{removeProduct(id,calories);};return/*#__PURE__*/_jsxs(\"div\",{className:\"containerProductForm\",children:[!isMobile&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"productForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`searchForbiddenFoods ${searchTerm&&filteredFoods.length>0?\"active\":\"\"}`,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter product name\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"searchInput\"}),filteredFoods.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"searchResults\",children:filteredFoods.filter(food=>food.title!==(selectedFood===null||selectedFood===void 0?void 0:selectedFood.title)).map(food=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleFoodSelect(food),children:[food.title,\" - \",food.calories,\" kcal/100g\"]},food._id))})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Grams\",value:grams,onChange:e=>setGrams(e.target.value),className:\"gramsInput\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"addButton\",children:\"+\"})]}),isMobile&&!showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"mobileAddButtonContainer\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mobileAddButtonForm\",onClick:()=>setShowModal(true),children:\"+\"})}),isMobile&&showModal&&/*#__PURE__*/_jsxs(\"div\",{className:\"modalMobile\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"closeModalInHeader\",onClick:()=>setShowModal(false),children:\"\\u2190\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modalContentMobile\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"closeModal\",onClick:()=>setShowModal(false),children:\"\\u2716\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"productFormMobile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`searchForbiddenFoods ${searchTerm&&filteredFoods.length>0?\"active\":\"\"}`,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter product name\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"searchInputMobile\"}),filteredFoods.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"searchResults\",children:filteredFoods.filter(food=>food.title!==(selectedFood===null||selectedFood===void 0?void 0:selectedFood.title)).map(food=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleFoodSelect(food),children:[food.title,\" - \",food.calories,\" kcal/100g\"]},food._id))})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Grams\",value:grams,onChange:e=>setGrams(e.target.value),className:\"gramsInputMobile\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"mobileAddButton\",children:\"Add\"})]})]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"productList\",children:productList.map(product=>/*#__PURE__*/_jsxs(\"li\",{className:\"productRow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"productColumn nameColumn\",children:[product.name,/*#__PURE__*/_jsx(\"div\",{className:\"line-1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"productColumn gramsColumn\",children:[product.grams,\"g\",/*#__PURE__*/_jsx(\"div\",{className:\"line-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"productColumn kcalColumn\",children:[product.calories,\" kcal\",/*#__PURE__*/_jsx(\"div\",{className:\"line-3\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveProduct(product.id,product.calories),className:\"removeButton\",children:\"x\"})]},product.id))})]});};export default DiaryAddProductForm;// import React, { useState, useEffect } from 'react';\n// import './DiaryAddProductForm.css';\n// import axios from 'axios';\n// const DiaryAddProductForm = ({\n//   addProductToList,\n//   allForbiddenFoods,\n//   selectedDate,\n//   updateCalories,\n//   productList = [],\n//   removeProduct,\n// }) => {\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n//   const [showModal, setShowModal] = useState(false); // Control vizibilitate formular pe mobil\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data);\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n//   useEffect(() => {\n//     setFilteredFoods(\n//       allFoods.filter((food) =>\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//       )\n//     );\n//   }, [searchTerm, allFoods]);\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!grams || !selectedFood) {\n//       console.warn('Please select a food and enter grams.');\n//       return;\n//     }\n//     const calories = (selectedFood.calories * grams) / 100;\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams: parseInt(grams, 10),\n//       calories: Math.round(calories),\n//     };\n//     addProductToList(newProduct); \n//     updateCalories(Math.round(calories));\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//     setShowModal(false); \n//   };\n//   const handleFoodSelect = (food) => {\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n//   const handleRemoveProduct = (id, calories) => {\n//     removeProduct(id, calories); // actualizează și caloriile\n//   };\n//   return (\n//     <div className='containerProductForm'>\n//        {(showModal || window.innerWidth > 768) && (\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Enter product name\"\n//     value={searchTerm}\n//     onChange={(e) => setSearchTerm(e.target.value)}\n//     className=\"searchInput\"\n//   />\n//   {filteredFoods.length > 0 && (\n//     <ul className=\"searchResults\">\n//       {filteredFoods\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\n//         .map((food) => (\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//             {food.title} - {food.calories} kcal/100g\n//           </li>\n//         ))}\n//     </ul>\n//   )}\n// </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n//  )}\n//        {/* Buton vizibil doar pe mobil */}\n//       <div className=\"mobileAddButtonContainer\">\n//         <button type=\"button\" className=\"mobileAddButton\"  onClick={() => setShowModal(true)}>\n//           {showModal ? \"Ascunde Formularul\" : \"Adaugă Produs\"}\n//         </button>\n//       </div>\n//        {/* Modal pentru mobil */}\n//        {showModal && (\n//         <div className=\"modal\">\n//           <div className=\"modalContent\">\n//             <button className=\"closeModal\" onClick={() => setShowModal(false)}>\n//               ✖\n//             </button>\n//             <form onSubmit={handleSubmit} className=\"productForm\">\n//               <div\n//                 className={`searchForbiddenFoods ${\n//                   searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\n//                 }`}\n//               >\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name\"\n//                   value={searchTerm}\n//                   onChange={(e) => setSearchTerm(e.target.value)}\n//                   className=\"searchInput\"\n//                 />\n//                 {filteredFoods.length > 0 && (\n//                   <ul className=\"searchResults\">\n//                     {filteredFoods\n//                       .filter((food) => food.title !== selectedFood?.title)\n//                       .map((food) => (\n//                         <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                           {food.title} - {food.calories} kcal/100g\n//                         </li>\n//                       ))}\n//                   </ul>\n//                 )}\n//               </div>\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Grams\"\n//                 value={grams}\n//                 onChange={(e) => setGrams(e.target.value)}\n//                 className=\"gramsInput\"\n//                 required\n//               />\n//               <button type=\"submit\" className=\"addButton\">\n//                 +\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//       <ul className=\"productList\">\n//   {productList.map((product) => (\n//     <li key={product.id} className=\"productRow\">\n//       <div className=\"productColumn nameColumn\">\n//         {product.name}\n//         <div className=\"line-1\"></div>\n//       </div>\n//       <div className=\"productColumn gramsColumn\">\n//         {product.grams}g\n//         <div className=\"line-2\"></div>\n//       </div>\n//       <div className=\"productColumn kcalColumn\">\n//         {product.calories} kcal\n//         <div className=\"line-3\"></div>\n//       </div>\n//       <button\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\n//         className=\"removeButton\"\n//       >\n//         x\n//       </button>\n//     </li>\n//   ))}\n// </ul>\n//     </div>\n//   );\n// };\n// export default DiaryAddProductForm;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './DiaryAddProductForm.css';\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\n//   const [productName, setProductName] = useState('');\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data); // Salvează obiectele complete în state\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n//   useEffect(() => {\n//     const filtered = allFoods.filter((food) =>\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredFoods(filtered);\n//   }, [searchTerm, allFoods]);\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!grams || !selectedFood) return;\n//     const calories = (selectedFood.calories * grams) / 100;\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams,\n//       calories: Math.round(calories),\n//     };\n//     addProductToList(newProduct);\n//     updateCalories(Math.round(calories));\n//     setProductName('');\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//   };\n//   const handleFoodSelect = (food) => {\n//     setProductName(food.title);\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredFoods.map((food) => (\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                 {food.title} - {food.calories} kcal/100g\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"submitBtn\">\n//           Add product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default DiaryAddProductForm;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","DiaryAddProductForm","_ref","addProductToList","allForbiddenFoods","selectedDate","updateCalories","productList","removeProduct","grams","setGrams","selectedFood","setSelectedFood","searchTerm","setSearchTerm","allFoods","setAllFoods","filteredFoods","setFilteredFoods","showModal","setShowModal","isMobile","setIsMobile","window","innerWidth","isDesktop","setIsDesktop","handleResize","addEventListener","removeEventListener","document","body","classList","add","remove","fetchForbiddenFoods","response","get","data","error","console","filter","food","title","toLowerCase","includes","handleSubmit","e","preventDefault","warn","calories","newProduct","id","Date","now","date","name","parseInt","Math","round","handleFoodSelect","handleRemoveProduct","className","children","onSubmit","length","type","placeholder","value","onChange","target","map","onClick","_id","required","product"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DiaryAddProductForm.css\";\r\nimport axios from \"axios\";\r\n\r\nconst DiaryAddProductForm = ({\r\n  addProductToList,\r\n  allForbiddenFoods,\r\n  selectedDate,\r\n  updateCalories,\r\n  productList = [],\r\n  removeProduct,\r\n}) => {\r\n  const [grams, setGrams] = useState(\"\");\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [allFoods, setAllFoods] = useState([]);\r\n  const [filteredFoods, setFilteredFoods] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n\r\nuseEffect(() => {\r\n  const handleResize = () => {\r\n    setIsDesktop(window.innerWidth > 768);\r\n  };\r\n\r\n  window.addEventListener(\"resize\", handleResize);\r\n  return () => window.removeEventListener(\"resize\", handleResize);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  if (showModal) {\r\n    document.body.classList.add(\"modalOpen\");\r\n  } else {\r\n    document.body.classList.remove(\"modalOpen\");\r\n  }\r\n}, [showModal]);\r\n\r\n  // Actualizează starea când fereastra se redimensionează\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchForbiddenFoods = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/dailycalorieintake/forbiddenFoods\"\r\n        );\r\n        setAllFoods(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching forbidden foods:\", error);\r\n      }\r\n    };\r\n    fetchForbiddenFoods();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredFoods(\r\n      allFoods.filter((food) =>\r\n        food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchTerm, allFoods]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!grams || !selectedFood) {\r\n      console.warn(\"Please select a food and enter grams.\");\r\n      return;\r\n    }\r\n\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n\r\n    const newProduct = {\r\n      id: Date.now(),\r\n      date: selectedDate,\r\n      name: selectedFood.title,\r\n      grams: parseInt(grams, 10),\r\n      calories: Math.round(calories),\r\n    };\r\n\r\n    addProductToList(newProduct);\r\n    updateCalories(Math.round(calories));\r\n\r\n    setGrams(\"\");\r\n    setSelectedFood(null);\r\n    setSearchTerm(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleFoodSelect = (food) => {\r\n    setSelectedFood(food);\r\n    setSearchTerm(food.title);\r\n    setFilteredFoods([]);\r\n  };\r\n\r\n  const handleRemoveProduct = (id, calories) => {\r\n    removeProduct(id, calories);\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerProductForm\">\r\n      {/* Formular pentru desktop și tabletă */}\r\n      {!isMobile && (\r\n        <form onSubmit={handleSubmit} className=\"productForm\">\r\n          <div\r\n            className={`searchForbiddenFoods ${\r\n              searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter product name\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"searchInput\"\r\n            />\r\n            {filteredFoods.length > 0 && (\r\n              <ul className=\"searchResults\">\r\n                {filteredFoods\r\n                  .filter((food) => food.title !== selectedFood?.title)\r\n                  .map((food) => (\r\n                    <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                      {food.title} - {food.calories} kcal/100g\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Grams\"\r\n            value={grams}\r\n            onChange={(e) => setGrams(e.target.value)}\r\n            className=\"gramsInput\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"addButton\">\r\n            +\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      {/* Buton vizibil doar pe mobil (dispare când modalul e deschis) */}\r\n{isMobile && !showModal && (\r\n  <div className=\"mobileAddButtonContainer\">\r\n    <button\r\n      type=\"button\"\r\n      className=\"mobileAddButtonForm\"\r\n      onClick={() => setShowModal(true)}\r\n    >\r\n      +\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n{/* Modalul apare doar pe mobil */}\r\n{isMobile && showModal && (\r\n  <div className=\"modalMobile\">\r\n    <button className=\"closeModalInHeader\" onClick={() => setShowModal(false)}>\r\n    ←\r\n      </button>\r\n    <div className=\"modalContentMobile\">\r\n      <button className=\"closeModal\" onClick={() => setShowModal(false)}>\r\n        ✖\r\n      </button>\r\n      <form onSubmit={handleSubmit} className=\"productFormMobile\">\r\n        <div\r\n          className={`searchForbiddenFoods ${\r\n            searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter product name\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"searchInputMobile\"\r\n          />\r\n          {filteredFoods.length > 0 && (\r\n            <ul className=\"searchResults\">\r\n              {filteredFoods\r\n                .filter((food) => food.title !== selectedFood?.title)\r\n                .map((food) => (\r\n                  <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                    {food.title} - {food.calories} kcal/100g\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Grams\"\r\n          value={grams}\r\n          onChange={(e) => setGrams(e.target.value)}\r\n          className=\"gramsInputMobile\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"mobileAddButton\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n      {/* Lista produselor */}\r\n      <ul className=\"productList\">\r\n        {productList.map((product) => (\r\n          <li key={product.id} className=\"productRow\">\r\n            <div className=\"productColumn nameColumn\">\r\n              {product.name}\r\n              <div className=\"line-1\"></div>\r\n            </div>\r\n            <div className=\"productColumn gramsColumn\">\r\n              {product.grams}g\r\n              <div className=\"line-2\"></div>\r\n            </div>\r\n            <div className=\"productColumn kcalColumn\">\r\n              {product.calories} kcal\r\n              <div className=\"line-3\"></div>\r\n            </div>\r\n            <button\r\n              onClick={() => handleRemoveProduct(product.id, product.calories)}\r\n              className=\"removeButton\"\r\n            >\r\n              x\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './DiaryAddProductForm.css';\r\n// import axios from 'axios';\r\n\r\n// const DiaryAddProductForm = ({\r\n//   addProductToList,\r\n//   allForbiddenFoods,\r\n//   selectedDate,\r\n//   updateCalories,\r\n//   productList = [],\r\n//   removeProduct,\r\n// }) => {\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false); // Control vizibilitate formular pe mobil\r\n\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setFilteredFoods(\r\n//       allFoods.filter((food) =>\r\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       )\r\n//     );\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!grams || !selectedFood) {\r\n//       console.warn('Please select a food and enter grams.');\r\n//       return;\r\n//     }\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams: parseInt(grams, 10),\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct); \r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//     setShowModal(false); \r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   const handleRemoveProduct = (id, calories) => {\r\n//     removeProduct(id, calories); // actualizează și caloriile\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerProductForm'>\r\n//        {(showModal || window.innerWidth > 768) && (\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//   <input\r\n//     type=\"text\"\r\n//     placeholder=\"Enter product name\"\r\n//     value={searchTerm}\r\n//     onChange={(e) => setSearchTerm(e.target.value)}\r\n//     className=\"searchInput\"\r\n//   />\r\n//   {filteredFoods.length > 0 && (\r\n//     <ul className=\"searchResults\">\r\n//       {filteredFoods\r\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\r\n//         .map((food) => (\r\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//             {food.title} - {food.calories} kcal/100g\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   )}\r\n// </div>\r\n\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n//  )}\r\n//        {/* Buton vizibil doar pe mobil */}\r\n//       <div className=\"mobileAddButtonContainer\">\r\n//         <button type=\"button\" className=\"mobileAddButton\"  onClick={() => setShowModal(true)}>\r\n//           {showModal ? \"Ascunde Formularul\" : \"Adaugă Produs\"}\r\n//         </button>\r\n//       </div>\r\n//        {/* Modal pentru mobil */}\r\n//        {showModal && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modalContent\">\r\n//             <button className=\"closeModal\" onClick={() => setShowModal(false)}>\r\n//               ✖\r\n//             </button>\r\n//             <form onSubmit={handleSubmit} className=\"productForm\">\r\n//               <div\r\n//                 className={`searchForbiddenFoods ${\r\n//                   searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n//                 }`}\r\n//               >\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Enter product name\"\r\n//                   value={searchTerm}\r\n//                   onChange={(e) => setSearchTerm(e.target.value)}\r\n//                   className=\"searchInput\"\r\n//                 />\r\n//                 {filteredFoods.length > 0 && (\r\n//                   <ul className=\"searchResults\">\r\n//                     {filteredFoods\r\n//                       .filter((food) => food.title !== selectedFood?.title)\r\n//                       .map((food) => (\r\n//                         <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                           {food.title} - {food.calories} kcal/100g\r\n//                         </li>\r\n//                       ))}\r\n//                   </ul>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Grams\"\r\n//                 value={grams}\r\n//                 onChange={(e) => setGrams(e.target.value)}\r\n//                 className=\"gramsInput\"\r\n//                 required\r\n//               />\r\n//               <button type=\"submit\" className=\"addButton\">\r\n//                 +\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <ul className=\"productList\">\r\n//   {productList.map((product) => (\r\n//     <li key={product.id} className=\"productRow\">\r\n//       <div className=\"productColumn nameColumn\">\r\n//         {product.name}\r\n//         <div className=\"line-1\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn gramsColumn\">\r\n//         {product.grams}g\r\n//         <div className=\"line-2\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn kcalColumn\">\r\n//         {product.calories} kcal\r\n//         <div className=\"line-3\"></div>\r\n//       </div>\r\n//       <button\r\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\r\n//         className=\"removeButton\"\r\n//       >\r\n//         x\r\n//       </button>\r\n//     </li>\r\n//   ))}\r\n// </ul>\r\n\r\n//     </div>\r\n  \r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './DiaryAddProductForm.css';\r\n\r\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\r\n//   const [productName, setProductName] = useState('');\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data); // Salvează obiectele complete în state\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = allFoods.filter((food) =>\r\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredFoods(filtered);\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!grams || !selectedFood) return;\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams,\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct);\r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setProductName('');\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setProductName(food.title);\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredFoods.map((food) => (\r\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                 {food.title} - {food.calories} kcal/100g\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"submitBtn\">\r\n//           Add product\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}