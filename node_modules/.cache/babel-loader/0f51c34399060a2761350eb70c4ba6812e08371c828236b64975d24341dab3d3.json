{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DailyCaloriesForm\\\\DailyCaloriesForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './DailyCaloriesForm.css';\n\n// const DailyCaloriesForm = () => {\n//   const [formData, setFormData] = useState({\n//     height: '',\n//     age: '',\n//     currentWeight: '',\n//     desiredWeight: '',\n//     bloodType: '1',\n//   });\n//   const [calories, setCalories] = useState(null);\n//   const [forbiddenFoods, setForbiddenFoods] = useState([]);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:5000/dailycalorieintake', formData);\n//       const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\n//       setCalories(response.data.calories);\n//       setForbiddenFoods(response.data.forbiddenFoods); // Folosește cele 4 alimente\n//       setAllForbiddenFoods(response.data.allForbiddenFoods); // Toate alimentele interzise\n\n//       setModalOpen(true);\n//       localStorage.setItem('calorieFormData', JSON.stringify(formData));\n//       console.log('Data saved to localStorage:', formData);\n//     } catch (error) {\n//       console.error('Error calculating calories:', error);\n//     }\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//     document.body.classList.remove('modal-open');\n//   };\n\n//   useEffect(() => {\n//     if (modalOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [modalOpen]);\n\n//   useEffect(() => {\n//     const handleEscKey = (e) => {\n//       if (e.key === 'Escape') {\n//         closeModal();\n//       }\n//     };\n\n//     document.addEventListener('keydown', handleEscKey);\n//     return () => {\n//       document.removeEventListener('keydown', handleEscKey);\n//     };\n//   }, []);\n\n//   const redirectToLogin = () => {\n//     navigate('/login');\n//   };\n\n//   const handleOverlayClick = (e) => {\n//     // Închide modalul doar dacă click-ul a avut loc pe overlay, nu pe conținutul modalului\n//     if (e.target === e.currentTarget) {\n//       closeModal();\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Overlay */}\n//       {modalOpen && <div className=\"overlay\" onClick={handleOverlayClick}></div>}\n\n//       {/* Formularul */}\n//       <form onSubmit={handleSubmit} className=\"form\">\n//         <div className=\"column\">\n//           <label>Height* <input type=\"number\" name=\"height\" required onChange={handleChange} /></label>\n//           <label>Age* <input type=\"number\" name=\"age\" required onChange={handleChange} /></label>\n//           <label>Current weight* <input type=\"number\" name=\"currentWeight\" required onChange={handleChange} /></label>\n//         </div>\n\n//         <div className=\"column\">\n//           <label>Desired weight* <input type=\"number\" name=\"desiredWeight\" required onChange={handleChange} /></label>\n//           <label>Blood type*</label>\n//           <div className=\"blood-type-options\">\n//             {['1', '2', '3', '4'].map((type) => (\n//               <label key={type} className={`blood-type-label ${formData.bloodType === type ? 'active' : ''}`}>\n//                 <input\n//                   type=\"radio\"\n//                   name=\"bloodType\"\n//                   value={type}\n//                   checked={formData.bloodType === type}\n//                   onChange={handleChange}\n//                 />\n//                 <span className=\"radio-circle\"></span>\n//                 <span className=\"blood-type-number\">{type}</span>\n//               </label>\n//             ))}\n//           </div>\n//         </div>\n\n//         <button className=\"submit-btn\" type=\"submit\">Start losing weight</button>\n//       </form>\n\n//       {/* Modalul */}\n//       {modalOpen && (\n//         <div className=\"modal\" onClick={closeModal}>\n//           <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//             <span className=\"close-btn\" onClick={closeModal}>&times;</span>\n//             <h3>Your recommended daily calorie intake is</h3>\n//             <p><span className='kcal'>{calories}</span> kcal</p>\n//             <hr />\n//             <h4>Foods you should not eat</h4>\n//             <ul>\n//               {forbiddenFoods.map((food, index) => <li key={index}>{index + 1}. {food}</li>)}\n//             </ul>\n//             <button className=\"start-btn\" onClick={redirectToLogin}>Start losing weight</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DailyCaloriesForm;import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './DailyCaloriesForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyCaloriesForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    height: '',\n    age: '',\n    currentWeight: '',\n    desiredWeight: '',\n    bloodType: '1'\n  });\n  const [calories, setCalories] = useState(null);\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/dailycalorieintake', formData);\n      setCalories(response.data.calories);\n      setForbiddenFoods(response.data.forbiddenFoods);\n      setAllForbiddenFoods(response.data.allForbiddenFoods); // Toate alimentele interzise\n\n      // Salvăm datele în localStorage pentru recalculare corectă\n      localStorage.setItem('calorieFormData', JSON.stringify(formData));\n      localStorage.setItem('caloriesData', JSON.stringify({\n        dailyRate: response.data.calories,\n        consumed: 0,\n        notRecommendedFoods: response.data.allForbiddenFoods\n      }));\n      setModalOpen(true); // Deschidem modal doar după ce primim răspunsul\n    } catch (error) {\n      console.error('Error calculating calories:', error);\n    }\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  useEffect(() => {\n    document.body.classList.toggle('modal-open', modalOpen);\n  }, [modalOpen]);\n  const redirectToLogin = () => {\n    navigate('/login');\n  };\n  console.log('forbiddenFoods:', forbiddenFoods); // să vedem dacă e gol sau undefined\n  console.log('Blood type selected:', bloodType); // să verificăm dacă bloodType ajunge corect\n\n  {\n    Array.isArray(forbiddenFoods) && forbiddenFoods.length > 0 ? forbiddenFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [index + 1, \". \", food]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forbidden foods for this blood type.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Height* \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"height\",\n            required: true,\n            onChange: handleChange,\n            value: formData.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Age* \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"age\",\n            required: true,\n            onChange: handleChange,\n            value: formData.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Current weight* \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"currentWeight\",\n            required: true,\n            onChange: handleChange,\n            value: formData.currentWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Desired weight* \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"desiredWeight\",\n            required: true,\n            onChange: handleChange,\n            value: formData.desiredWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blood type*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blood-type-options\",\n          children: ['1', '2', '3', '4'].map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `blood-type-label ${formData.bloodType === type ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"bloodType\",\n              value: type,\n              checked: formData.bloodType === type,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blood-type-number\",\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        type: \"submit\",\n        children: \"Start losing weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your recommended daily calorie intake is\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"kcal\",\n            children: calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 16\n          }, this), \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Foods you should not eat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: forbiddenFoods.map((food, index) => console.log(index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-btn\",\n          onClick: redirectToLogin,\n          children: \"Start losing weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyCaloriesForm, \"mbF89hXLczRKwYGepBpsoqlBeyo=\", false, function () {\n  return [useNavigate];\n});\n_c = DailyCaloriesForm;\nexport default DailyCaloriesForm;\nvar _c;\n$RefreshReg$(_c, \"DailyCaloriesForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","DailyCaloriesForm","_s","formData","setFormData","height","age","currentWeight","desiredWeight","bloodType","calories","setCalories","allForbiddenFoods","setAllForbiddenFoods","forbiddenFoods","setForbiddenFoods","modalOpen","setModalOpen","navigate","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","post","data","localStorage","setItem","JSON","stringify","dailyRate","consumed","notRecommendedFoods","error","console","closeModal","document","body","classList","toggle","redirectToLogin","log","Array","isArray","length","map","food","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","required","onChange","checked","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DailyCaloriesForm/DailyCaloriesForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './DailyCaloriesForm.css';\r\n\r\n// const DailyCaloriesForm = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     height: '',\r\n//     age: '',\r\n//     currentWeight: '',\r\n//     desiredWeight: '',\r\n//     bloodType: '1',\r\n//   });\r\n//   const [calories, setCalories] = useState(null);\r\n//   const [forbiddenFoods, setForbiddenFoods] = useState([]);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/dailycalorieintake', formData);\r\n//       const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\r\n//       setCalories(response.data.calories);\r\n//       setForbiddenFoods(response.data.forbiddenFoods); // Folosește cele 4 alimente\r\n//       setAllForbiddenFoods(response.data.allForbiddenFoods); // Toate alimentele interzise\r\n      \r\n//       setModalOpen(true);\r\n//       localStorage.setItem('calorieFormData', JSON.stringify(formData));\r\n//       console.log('Data saved to localStorage:', formData);\r\n//     } catch (error) {\r\n//       console.error('Error calculating calories:', error);\r\n//     }\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setModalOpen(false);\r\n//     document.body.classList.remove('modal-open');\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (modalOpen) {\r\n//       document.body.classList.add('modal-open');\r\n//     } else {\r\n//       document.body.classList.remove('modal-open');\r\n//     }\r\n//   }, [modalOpen]);\r\n\r\n//   useEffect(() => {\r\n//     const handleEscKey = (e) => {\r\n//       if (e.key === 'Escape') {\r\n//         closeModal();\r\n//       }\r\n//     };\r\n\r\n//     document.addEventListener('keydown', handleEscKey);\r\n//     return () => {\r\n//       document.removeEventListener('keydown', handleEscKey);\r\n//     };\r\n//   }, []);\r\n\r\n//   const redirectToLogin = () => {\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleOverlayClick = (e) => {\r\n//     // Închide modalul doar dacă click-ul a avut loc pe overlay, nu pe conținutul modalului\r\n//     if (e.target === e.currentTarget) {\r\n//       closeModal();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Overlay */}\r\n//       {modalOpen && <div className=\"overlay\" onClick={handleOverlayClick}></div>}\r\n\r\n//       {/* Formularul */}\r\n//       <form onSubmit={handleSubmit} className=\"form\">\r\n//         <div className=\"column\">\r\n//           <label>Height* <input type=\"number\" name=\"height\" required onChange={handleChange} /></label>\r\n//           <label>Age* <input type=\"number\" name=\"age\" required onChange={handleChange} /></label>\r\n//           <label>Current weight* <input type=\"number\" name=\"currentWeight\" required onChange={handleChange} /></label>\r\n//         </div>\r\n\r\n//         <div className=\"column\">\r\n//           <label>Desired weight* <input type=\"number\" name=\"desiredWeight\" required onChange={handleChange} /></label>\r\n//           <label>Blood type*</label>\r\n//           <div className=\"blood-type-options\">\r\n//             {['1', '2', '3', '4'].map((type) => (\r\n//               <label key={type} className={`blood-type-label ${formData.bloodType === type ? 'active' : ''}`}>\r\n//                 <input\r\n//                   type=\"radio\"\r\n//                   name=\"bloodType\"\r\n//                   value={type}\r\n//                   checked={formData.bloodType === type}\r\n//                   onChange={handleChange}\r\n//                 />\r\n//                 <span className=\"radio-circle\"></span>\r\n//                 <span className=\"blood-type-number\">{type}</span>\r\n//               </label>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n\r\n//         <button className=\"submit-btn\" type=\"submit\">Start losing weight</button>\r\n//       </form>\r\n\r\n//       {/* Modalul */}\r\n//       {modalOpen && (\r\n//         <div className=\"modal\" onClick={closeModal}>\r\n//           <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//             <span className=\"close-btn\" onClick={closeModal}>&times;</span>\r\n//             <h3>Your recommended daily calorie intake is</h3>\r\n//             <p><span className='kcal'>{calories}</span> kcal</p>\r\n//             <hr />\r\n//             <h4>Foods you should not eat</h4>\r\n//             <ul>\r\n//               {forbiddenFoods.map((food, index) => <li key={index}>{index + 1}. {food}</li>)}\r\n//             </ul>\r\n//             <button className=\"start-btn\" onClick={redirectToLogin}>Start losing weight</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DailyCaloriesForm;import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DailyCaloriesForm.css';\r\n\r\nconst DailyCaloriesForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    desiredWeight: '',\r\n    bloodType: '1',\r\n  });\r\n  const [calories, setCalories] = useState(null);\r\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\r\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/dailycalorieintake', formData);\r\n      setCalories(response.data.calories);\r\n      setForbiddenFoods(response.data.forbiddenFoods);\r\n      setAllForbiddenFoods(response.data.allForbiddenFoods); // Toate alimentele interzise\r\n\r\n  \r\n      // Salvăm datele în localStorage pentru recalculare corectă\r\n      localStorage.setItem('calorieFormData', JSON.stringify(formData));\r\n      localStorage.setItem('caloriesData', JSON.stringify({\r\n        dailyRate: response.data.calories,\r\n        consumed: 0,\r\n        notRecommendedFoods: response.data.allForbiddenFoods,\r\n      }));\r\n  \r\n      setModalOpen(true); // Deschidem modal doar după ce primim răspunsul\r\n    } catch (error) {\r\n      console.error('Error calculating calories:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.classList.toggle('modal-open', modalOpen);\r\n  }, [modalOpen]);\r\n\r\n  const redirectToLogin = () => {\r\n    navigate('/login');\r\n  };\r\n  console.log('forbiddenFoods:', forbiddenFoods); // să vedem dacă e gol sau undefined\r\n  console.log('Blood type selected:', bloodType); // să verificăm dacă bloodType ajunge corect\r\n  \r\n  \r\n    {Array.isArray(forbiddenFoods) && forbiddenFoods.length > 0 ? (\r\n      forbiddenFoods.map((food, index) => (\r\n        <li key={index}>{index + 1}. {food}</li>\r\n      ))\r\n    ) : (\r\n      <p>No forbidden foods for this blood type.</p>\r\n    )}\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      {modalOpen && <div className=\"overlay\" onClick={closeModal}></div>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <div className=\"column\">\r\n          <label>Height* <input type=\"number\" name=\"height\" required onChange={handleChange} value={formData.height} /></label>\r\n          <label>Age* <input type=\"number\" name=\"age\" required onChange={handleChange} value={formData.age} /></label>\r\n          <label>Current weight* <input type=\"number\" name=\"currentWeight\" required onChange={handleChange} value={formData.currentWeight} /></label>\r\n        </div>\r\n\r\n        <div className=\"column\">\r\n          <label>Desired weight* <input type=\"number\" name=\"desiredWeight\" required onChange={handleChange} value={formData.desiredWeight} /></label>\r\n          <label>Blood type*</label>\r\n          <div className=\"blood-type-options\">\r\n            {['1', '2', '3', '4'].map((type) => (\r\n              <label key={type} className={`blood-type-label ${formData.bloodType === type ? 'active' : ''}`}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"bloodType\"\r\n                  value={type}\r\n                  checked={formData.bloodType === type}\r\n                  onChange={handleChange}\r\n                />\r\n                <span className=\"radio-circle\"></span>\r\n                <span className=\"blood-type-number\">{type}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"submit-btn\" type=\"submit\">Start losing weight</button>\r\n      </form>\r\n\r\n      {modalOpen && (\r\n        <div className=\"modal\" onClick={closeModal}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <span className=\"close-btn\" onClick={closeModal}>&times;</span>\r\n            <h3>Your recommended daily calorie intake is</h3>\r\n            <p><span className='kcal'>{calories}</span> kcal</p>\r\n            <hr />\r\n            <h4>Foods you should not eat</h4>\r\n            <ul>\r\n               {forbiddenFoods.map((food, index) => console.log(index))}\r\n            </ul>\r\n            <button className=\"start-btn\" onClick={redirectToLogin}>Start losing weight</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyCaloriesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}