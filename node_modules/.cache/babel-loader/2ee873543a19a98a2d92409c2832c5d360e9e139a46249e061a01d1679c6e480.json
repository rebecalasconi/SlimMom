{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\nimport Header from '../../components/Header/Header';\nimport './DiaryPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return ''; // VerificÄƒ dacÄƒ data existÄƒ\n  const [year, month, day] = dateString.split('-');\n  return day && month && year ? `${day}.${month}.${year}` : '';\n};\nconst DiaryPage = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    height: '',\n    age: '',\n    currentWeight: '',\n    desiredWeight: '',\n    bloodType: '1'\n  });\n  const [dailyRate, setDailyRate] = useState(0);\n  const [consumed, setConsumed] = useState(0);\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    return `${day}.${month}.${year}`;\n  };\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\n    if (storedData) {\n      setDailyRate(storedData.dailyRate || 0);\n      setConsumed(storedData.consumed || 0);\n      setForbiddenFoods(storedData.forbiddenFoods || []);\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\n      setSelectedDate(storedData.dateCompleted || new Date().toISOString().split('T')[0]);\n      const formattedDate = storedData.dateCompleted ? formatDate(storedData.dateCompleted) : formatDate(new Date().toISOString().split('T')[0]);\n      setSelectedDate(formattedDate);\n    }\n    if (storedFormData) {\n      setUserData(storedFormData);\n    }\n  }, []);\n  const handleDateChange = e => {\n    const rawDate = e.target.value; // Format YYYY-MM-DD\n    setSelectedDate(formatDate(rawDate)); // Convertim Ã®n DD.MM.YYYY\n  };\n  const addProductToList = product => {\n    setProducts([...products, product]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftPanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datePickerContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"selectedDate\",\n            children: selectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"calendarLabel\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"date\",\n            type: \"date\",\n            className: \"calendarPicker\",\n            value: selectedDate,\n            onChange: handleDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n          addProductToList: addProductToList,\n          allForbiddenFoods: allForbiddenFoods,\n          selectedDate: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiaryProductsList, {\n          products: products,\n          removeProduct: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightPanel\",\n        children: /*#__PURE__*/_jsxDEV(RightSideBar, {\n          dailyRate: dailyRate,\n          consumed: consumed,\n          forbiddenFoods: forbiddenFoods,\n          allForbiddenFoods: allForbiddenFoods\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DiaryPage, \"cVbwEuR25J9SUXZx59dUDAx81sM=\");\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DiaryAddProductForm","DiaryProductsList","RightSideBar","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","dateString","year","month","day","split","DiaryPage","_s","userData","setUserData","height","age","currentWeight","desiredWeight","bloodType","dailyRate","setDailyRate","consumed","setConsumed","forbiddenFoods","setForbiddenFoods","allForbiddenFoods","setAllForbiddenFoods","products","setProducts","selectedDate","setSelectedDate","storedData","JSON","parse","localStorage","getItem","storedFormData","dateCompleted","Date","toISOString","formattedDate","handleDateChange","e","rawDate","target","value","addProductToList","product","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","type","onChange","removeProduct","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\r\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\r\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\r\nimport Header from '../../components/Header/Header';\r\nimport './DiaryPage.css';\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return ''; // VerificÄƒ dacÄƒ data existÄƒ\r\n    const [year, month, day] = dateString.split('-');\r\n    return day && month && year ? `${day}.${month}.${year}` : '';\r\n  };\r\n\r\nconst DiaryPage = () => {\r\n  const [userData, setUserData] = useState({\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    desiredWeight: '',\r\n    bloodType: '1',\r\n  });\r\n\r\n  const [dailyRate, setDailyRate] = useState(0);\r\n  const [consumed, setConsumed] = useState(0);\r\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\r\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n\r\n  const formatDate = (dateString) => {\r\n    const [year, month, day] = dateString.split('-');\r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\r\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\r\n\r\n    if (storedData) {\r\n      setDailyRate(storedData.dailyRate || 0);\r\n      setConsumed(storedData.consumed || 0);\r\n      setForbiddenFoods(storedData.forbiddenFoods || []);\r\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\r\n      setSelectedDate(storedData.dateCompleted || new Date().toISOString().split('T')[0]);\r\n\r\n      const formattedDate = storedData.dateCompleted\r\n      ? formatDate(storedData.dateCompleted)\r\n      : formatDate(new Date().toISOString().split('T')[0]);\r\n\r\n    setSelectedDate(formattedDate);\r\n    }\r\n\r\n    if (storedFormData) {\r\n      setUserData(storedFormData);\r\n    }\r\n  }, []);\r\n\r\n  const handleDateChange = (e) => {\r\n    const rawDate = e.target.value; // Format YYYY-MM-DD\r\n    setSelectedDate(formatDate(rawDate)); // Convertim Ã®n DD.MM.YYYY\r\n  };\r\n\r\n  const addProductToList = (product) => {\r\n    setProducts([...products, product]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"leftPanel\">\r\n          <div className=\"datePickerContainer\">\r\n            <p className=\"selectedDate\">{selectedDate}</p>\r\n            <label htmlFor=\"date\" className=\"calendarLabel\">\r\n              ðŸ“…\r\n            </label>\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              className=\"calendarPicker\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </div>\r\n\r\n          <DiaryAddProductForm\r\n            addProductToList={addProductToList}\r\n            allForbiddenFoods={allForbiddenFoods}\r\n            selectedDate={selectedDate}\r\n          />\r\n          <DiaryProductsList products={products} removeProduct={() => {}} />\r\n        </div>\r\n\r\n        <div className=\"rightPanel\">\r\n          <RightSideBar\r\n            dailyRate={dailyRate}\r\n            consumed={consumed}\r\n            forbiddenFoods={forbiddenFoods}\r\n            allForbiddenFoods={allForbiddenFoods}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}