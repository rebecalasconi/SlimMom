{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\nimport Header from '../../components/Header/Header';\nimport './DiaryPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryPage = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    height: '',\n    age: '',\n    currentWeight: '',\n    desiredWeight: '',\n    bloodType: '1'\n  });\n  const [dailyData, setDailyData] = useState(() => {\n    return JSON.parse(localStorage.getItem('dailyData')) || {};\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [dailyRate, setDailyRate] = useState(0);\n  const [consumed, setConsumed] = useState(0);\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [isUserSelectedDate, setIsUserSelectedDate] = useState(false);\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    return `${day}.${month}.${year}`;\n  };\n  const [formattedDate, setFormattedDate] = useState(formatDate(new Date().toISOString().split('T')[0])); // format dd.mm.yyyy\n\n  const getUserKey = key => {\n    const userName = localStorage.getItem('userName');\n    return userName ? `${userName}_${key}` : key;\n  };\n  useEffect(() => {\n    const userName = localStorage.getItem('userName');\n    if (!userName) {\n      setSelectedDate(new Date().toISOString().split('T')[0]);\n      setProducts([]);\n      setConsumed(0);\n      setDailyRate(0);\n      setForbiddenFoods([]);\n      setAllForbiddenFoods([]);\n      return;\n    }\n    const storedSelectedDate = localStorage.getItem('selectedDate') || new Date().toISOString().split('T')[0];\n    setSelectedDate(storedSelectedDate);\n    setFormattedDate(formatDate(storedSelectedDate));\n    const userKey = getUserKey('caloriesDataByDate');\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const dataForSelectedDate = savedData[storedSelectedDate] || {\n      products: [],\n      consumed: 0\n    };\n    setProducts(dataForSelectedDate.products);\n    setConsumed(dataForSelectedDate.consumed);\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\n    if (storedData) {\n      setDailyRate(storedData.dailyRate || 0);\n      setForbiddenFoods(storedData.forbiddenFoods || []);\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\n    }\n    if (storedFormData) {\n      setUserData(storedFormData);\n    }\n  }, []);\n  const updateCalories = calories => {\n    setConsumed(consumed + calories);\n  };\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    setFormattedDate(formatDate(newDate));\n    setIsUserSelectedDate(true);\n    localStorage.setItem('selectedDate', newDate);\n\n    // Actualizează datele pentru ziua selectată\n    const userKey = getUserKey('caloriesDataByDate');\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const dataForSelectedDate = savedData[newDate] || {\n      products: [],\n      consumed: 0\n    };\n    setProducts(dataForSelectedDate.products);\n    setConsumed(dataForSelectedDate.consumed);\n  };\n  const saveDataForDate = (date, products, consumed) => {\n    const userKey = getUserKey('caloriesDataByDate');\n    const existingData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const updatedData = {\n      ...existingData,\n      [date]: {\n        products,\n        consumed\n      }\n    };\n    localStorage.setItem(userKey, JSON.stringify(updatedData));\n  };\n  const addProductToList = product => {\n    const updatedProducts = [...products, product];\n    const updatedConsumed = consumed + product.calories;\n    setProducts(updatedProducts);\n    setConsumed(updatedConsumed);\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\n  };\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\n    savedData[selectedDate] = {\n      products,\n      consumed\n    };\n    localStorage.setItem('caloriesDataByDate', JSON.stringify(savedData));\n  }, [products, consumed, selectedDate]);\n  const handleRemoveProduct = (id, calories) => {\n    const updatedProducts = products.filter(product => product.id !== id);\n    const updatedConsumed = consumed - calories;\n    setProducts(updatedProducts);\n    setConsumed(updatedConsumed);\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\n  };\n\n  // const addProductToList = (newProduct) => {\n  //   setProductList((prevList) => [...prevList, newProduct]);\n  // };\n\n  useEffect(() => {\n    const userKey = getUserKey('caloriesDataByDate');\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const dataForSelectedDate = savedData[selectedDate] || {\n      products: [],\n      consumed: 0\n    };\n    setProducts(dataForSelectedDate.products);\n    setConsumed(dataForSelectedDate.consumed);\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-full\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"datePickerContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selectedDate\",\n              children: formatDate(selectedDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              className: \"calendarLabel\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"date\",\n              type: \"date\",\n              className: \"calendarPicker\",\n              value: selectedDate,\n              onChange: handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n            addProductToList: addProductToList,\n            allForbiddenFoods: allForbiddenFoods,\n            selectedDate: selectedDate,\n            updateCalories: updateCalories,\n            productList: products,\n            removeProduct: handleRemoveProduct // Asigură-te că este transmis corect în props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightPanel\",\n          children: /*#__PURE__*/_jsxDEV(RightSideBar, {\n            dailyRate: dailyRate,\n            consumed: consumed,\n            forbiddenFoods: forbiddenFoods,\n            allForbiddenFoods: allForbiddenFoods,\n            selectedDate: selectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(DiaryPage, \"mNMT77wxMQedoWYUDLjeBM8fRus=\");\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DiaryAddProductForm","DiaryProductsList","RightSideBar","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","DiaryPage","_s","userData","setUserData","height","age","currentWeight","desiredWeight","bloodType","dailyData","setDailyData","JSON","parse","localStorage","getItem","selectedDate","setSelectedDate","Date","toISOString","split","dailyRate","setDailyRate","consumed","setConsumed","forbiddenFoods","setForbiddenFoods","allForbiddenFoods","setAllForbiddenFoods","products","setProducts","productList","setProductList","isUserSelectedDate","setIsUserSelectedDate","formatDate","dateString","year","month","day","formattedDate","setFormattedDate","getUserKey","key","userName","storedSelectedDate","userKey","savedData","dataForSelectedDate","storedData","storedFormData","updateCalories","calories","handleDateChange","e","newDate","target","value","setItem","saveDataForDate","date","existingData","updatedData","stringify","addProductToList","product","updatedProducts","updatedConsumed","handleRemoveProduct","id","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","removeProduct","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\r\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\r\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\r\nimport Header from '../../components/Header/Header';\r\nimport './DiaryPage.css';\r\n\r\nconst DiaryPage = () => {\r\n  const [userData, setUserData] = useState({\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    desiredWeight: '',\r\n    bloodType: '1',\r\n  });\r\n\r\n  const [dailyData, setDailyData] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('dailyData')) || {};\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n  const [dailyRate, setDailyRate] = useState(0);\r\n  const [consumed, setConsumed] = useState(0);\r\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\r\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [isUserSelectedDate, setIsUserSelectedDate] = useState(false); \r\n\r\n  const formatDate = (dateString) => {\r\n    const [year, month, day] = dateString.split('-');\r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  const [formattedDate, setFormattedDate] = useState(formatDate(new Date().toISOString().split('T')[0])); // format dd.mm.yyyy\r\n\r\n\r\n  const getUserKey = (key) => {\r\n    const userName = localStorage.getItem('userName');\r\n    return userName ? `${userName}_${key}` : key;\r\n  };\r\n  useEffect(() => {\r\n    const userName = localStorage.getItem('userName');\r\n    if (!userName) {\r\n      setSelectedDate(new Date().toISOString().split('T')[0]);\r\n      setProducts([]);\r\n      setConsumed(0);\r\n      setDailyRate(0);\r\n      setForbiddenFoods([]);\r\n      setAllForbiddenFoods([]);\r\n      return;\r\n    }\r\n  \r\n    const storedSelectedDate = localStorage.getItem('selectedDate') || new Date().toISOString().split('T')[0];\r\n    setSelectedDate(storedSelectedDate);\r\n    setFormattedDate(formatDate(storedSelectedDate));\r\n    \r\n    const userKey = getUserKey('caloriesDataByDate');\r\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n    const dataForSelectedDate = savedData[storedSelectedDate] || { products: [], consumed: 0 };\r\n    \r\n    setProducts(dataForSelectedDate.products);\r\n    setConsumed(dataForSelectedDate.consumed);\r\n  \r\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\r\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\r\n  \r\n    if (storedData) {\r\n      setDailyRate(storedData.dailyRate || 0);\r\n      setForbiddenFoods(storedData.forbiddenFoods || []);\r\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\r\n    }\r\n  \r\n    if (storedFormData) {\r\n      setUserData(storedFormData);\r\n    }\r\n  }, []);\r\n  \r\n  const updateCalories = (calories) => {\r\n    setConsumed(consumed + calories);\r\n  };\r\n  \r\n  const handleDateChange = (e) => {\r\n    const newDate = e.target.value;\r\n    setSelectedDate(newDate);\r\n    setFormattedDate(formatDate(newDate));\r\n    setIsUserSelectedDate(true);\r\n\r\n    localStorage.setItem('selectedDate', newDate);\r\n    \r\n    // Actualizează datele pentru ziua selectată\r\n    const userKey = getUserKey('caloriesDataByDate');\r\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n    const dataForSelectedDate = savedData[newDate] || { products: [], consumed: 0 };\r\n    \r\n    setProducts(dataForSelectedDate.products);\r\n    setConsumed(dataForSelectedDate.consumed);\r\n  };\r\n  \r\n  \r\n  const saveDataForDate = (date, products, consumed) => {\r\n  const userKey = getUserKey('caloriesDataByDate');\r\n  const existingData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n  const updatedData = {\r\n      ...existingData,\r\n      [date]: { products, consumed },\r\n    };\r\n    \r\n    localStorage.setItem(userKey, JSON.stringify(updatedData));\r\n  };\r\n\r\n  const addProductToList = (product) => {\r\n    const updatedProducts = [...products, product];\r\n    const updatedConsumed = consumed + product.calories;\r\n    setProducts(updatedProducts);\r\n    setConsumed(updatedConsumed);\r\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\r\n  \r\n    savedData[selectedDate] = {\r\n      products,\r\n      consumed,\r\n    };\r\n  \r\n    localStorage.setItem('caloriesDataByDate', JSON.stringify(savedData));\r\n  }, [products, consumed, selectedDate]);\r\n  \r\n  const handleRemoveProduct = (id, calories) => {\r\n    const updatedProducts = products.filter((product) => product.id !== id);\r\n    const updatedConsumed = consumed - calories;\r\n    setProducts(updatedProducts);\r\n    setConsumed(updatedConsumed);\r\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\r\n  };\r\n\r\n// const addProductToList = (newProduct) => {\r\n//   setProductList((prevList) => [...prevList, newProduct]);\r\n// };\r\n\r\nuseEffect(() => {\r\n    const userKey = getUserKey('caloriesDataByDate');\r\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n    \r\n    const dataForSelectedDate = savedData[selectedDate] || { products: [], consumed: 0 };\r\n    \r\n    setProducts(dataForSelectedDate.products);\r\n    setConsumed(dataForSelectedDate.consumed);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container-full\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"leftPanel\">\r\n          <div className=\"datePickerContainer\">\r\n          <p className=\"selectedDate\">\r\n          {formatDate(selectedDate)}</p>\r\n            <label htmlFor=\"date\" className=\"calendarLabel\">\r\n              📅\r\n            </label>\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              className=\"calendarPicker\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </div>\r\n\r\n          <DiaryAddProductForm\r\n  addProductToList={addProductToList}\r\n  allForbiddenFoods={allForbiddenFoods}\r\n  selectedDate={selectedDate}\r\n  updateCalories={updateCalories}\r\n  productList={products}\r\n  removeProduct={handleRemoveProduct} // Asigură-te că este transmis corect în props\r\n/>\r\n\r\n        </div>\r\n\r\n        <div className=\"rightPanel\">\r\n          <RightSideBar\r\n            dailyRate={dailyRate}\r\n            consumed={consumed}\r\n            forbiddenFoods={forbiddenFoods}\r\n            allForbiddenFoods={allForbiddenFoods}\r\n            selectedDate={selectedDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}