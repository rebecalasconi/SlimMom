{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import './Header.css';\n// import { useLocation, NavLink } from 'react-router-dom';\n// import { useMediaQuery } from 'react-responsive';\n// import logo from '../../assets/images/logo.png';\n\n// const Header = () => {\n//   const [ModalOpen, setModalOpen] = useState(false); // Stare pentru modal\n//   const token = localStorage.getItem('token');\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\n//   const userName = localStorage.getItem('userName');\n//   const location = useLocation();\n//   const isTabletOrMobile = useMediaQuery({ maxWidth: 1280 });\n//   const isCalculatorPage = location.pathname === '/calculator';\n//   const isDiaryPage = location.pathname === '/diary';\n\n//   // Funcție pentru deschiderea și închiderea modalului\n//   const toggleModal = () => {\n//     setModalOpen(!ModalOpen);\n//     // Dacă modalul este deschis, oprește scroll-ul\n//     if (!ModalOpen) {\n//       document.body.style.overflow = 'hidden'; // Oprește scroll-ul\n//     } else {\n//       document.body.style.overflow = 'auto'; // Restabilește scroll-ul\n//     }\n//   };\n\n//   return (\n//     <header className=\"header\">\n//       <div className=\"header__logo\">\n//         <img src={logo} alt=\"SlimMom logo\" className=\"logo__image\" />\n//         <span className=\"logo__slim\">Slim</span>\n//         <span className=\"logo__mom\">Mom</span>\n//       </div>\n//       <div className=\"nav__separator\"></div>\n\n//       {/* Afișăm userInfo doar pe CalculatorPage și pe mobile/tablet */}\n//       {(isCalculatorPage || isDiaryPage) && isTabletOrMobile && userName && (\n//         <div className=\"userInfoCalc\">\n//           <span className='userInfoName'>{userName}</span>\n//           <span className=\"separator\">|</span>\n//           <button onClick={() => window.location.href = '/'} className=\"exitButton\">Exit</button>\n//         </div>\n//       )}\n\n// {/* Hamburger Button - 3 liniuțe sau X */}\n// {(isCalculatorPage || isDiaryPage) && isTabletOrMobile && (\n//   <div className={`hamburger ${ModalOpen ? 'open' : ''}`} onClick={toggleModal}>\n//     <span></span>\n//     <span></span>\n//     <span></span>\n//   </div>\n// )}\n\n//       {/* Modalul */}\n//       {ModalOpen && (\n//         <div className=\"modalHeader showHeader\">\n//           <div className=\"modalHeader-content\">\n//           <NavLink to=\"/diary\" className={({ isActive }) => isActive ? 'modal-link selected' : 'modal-link'}>\n//               DIARY\n//             </NavLink>\n//             <NavLink to=\"/calculator\" className={({ isActive }) => isActive ? 'modal-link selected' : 'modal-link'}>\n//               CALCULATOR\n//             </NavLink>\n//           </div>\n//         </div>\n//       )}\n//  {/* Condiționăm display: none pe header__nav pentru CalculatorPage și tabletă */}\n//  <nav className={`header__nav ${isCalculatorPage && isTabletOrMobile ? 'hide-nav' : ''}`}>\n//         <NavLink to=\"/login\" className={({ isActive }) => isActive ? \"nav__link active\" : \"nav__link\"}>\n//           LOG IN\n//         </NavLink>\n//         <NavLink to=\"/register\" className={({ isActive }) => isActive ? \"nav__link active\" : \"nav__link\"}>\n//           REGISTRATION\n//         </NavLink>\n//       </nav>\n//     </header>\n//   );\n// };\n\n// export default Header;","map":{"version":3,"names":[],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/Header/Header.jsx"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import './Header.css';\r\n// import { useLocation, NavLink } from 'react-router-dom';\r\n// import { useMediaQuery } from 'react-responsive';\r\n// import logo from '../../assets/images/logo.png';\r\n\r\n// const Header = () => {\r\n//   const [ModalOpen, setModalOpen] = useState(false); // Stare pentru modal\r\n//   const token = localStorage.getItem('token');\r\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n//   const userName = localStorage.getItem('userName');\r\n//   const location = useLocation();\r\n//   const isTabletOrMobile = useMediaQuery({ maxWidth: 1280 });\r\n//   const isCalculatorPage = location.pathname === '/calculator';\r\n//   const isDiaryPage = location.pathname === '/diary';\r\n\r\n\r\n//   // Funcție pentru deschiderea și închiderea modalului\r\n//   const toggleModal = () => {\r\n//     setModalOpen(!ModalOpen);\r\n//     // Dacă modalul este deschis, oprește scroll-ul\r\n//     if (!ModalOpen) {\r\n//       document.body.style.overflow = 'hidden'; // Oprește scroll-ul\r\n//     } else {\r\n//       document.body.style.overflow = 'auto'; // Restabilește scroll-ul\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <header className=\"header\">\r\n//       <div className=\"header__logo\">\r\n//         <img src={logo} alt=\"SlimMom logo\" className=\"logo__image\" />\r\n//         <span className=\"logo__slim\">Slim</span>\r\n//         <span className=\"logo__mom\">Mom</span>\r\n//       </div>\r\n//       <div className=\"nav__separator\"></div>\r\n\r\n//       {/* Afișăm userInfo doar pe CalculatorPage și pe mobile/tablet */}\r\n//       {(isCalculatorPage || isDiaryPage) && isTabletOrMobile && userName && (\r\n//         <div className=\"userInfoCalc\">\r\n//           <span className='userInfoName'>{userName}</span>\r\n//           <span className=\"separator\">|</span>\r\n//           <button onClick={() => window.location.href = '/'} className=\"exitButton\">Exit</button>\r\n//         </div>\r\n//       )}\r\n\r\n// {/* Hamburger Button - 3 liniuțe sau X */}\r\n// {(isCalculatorPage || isDiaryPage) && isTabletOrMobile && (\r\n//   <div className={`hamburger ${ModalOpen ? 'open' : ''}`} onClick={toggleModal}>\r\n//     <span></span>\r\n//     <span></span>\r\n//     <span></span>\r\n//   </div>\r\n// )}\r\n\r\n\r\n//       {/* Modalul */}\r\n//       {ModalOpen && (\r\n//         <div className=\"modalHeader showHeader\">\r\n//           <div className=\"modalHeader-content\">\r\n//           <NavLink to=\"/diary\" className={({ isActive }) => isActive ? 'modal-link selected' : 'modal-link'}>\r\n//               DIARY\r\n//             </NavLink>\r\n//             <NavLink to=\"/calculator\" className={({ isActive }) => isActive ? 'modal-link selected' : 'modal-link'}>\r\n//               CALCULATOR\r\n//             </NavLink>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//  {/* Condiționăm display: none pe header__nav pentru CalculatorPage și tabletă */}\r\n//  <nav className={`header__nav ${isCalculatorPage && isTabletOrMobile ? 'hide-nav' : ''}`}>\r\n//         <NavLink to=\"/login\" className={({ isActive }) => isActive ? \"nav__link active\" : \"nav__link\"}>\r\n//           LOG IN\r\n//         </NavLink>\r\n//         <NavLink to=\"/register\" className={({ isActive }) => isActive ? \"nav__link active\" : \"nav__link\"}>\r\n//           REGISTRATION\r\n//         </NavLink>\r\n//       </nav>\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}