{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\RightSideBar\\\\RightSideBar.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './RightSideBar.css';\n\n// const RightSideBar = ({ dailyRate, consumed, allForbiddenFoods }) => {\n//   const navigate = useNavigate();\n//   const userName = localStorage.getItem('userName');\n//   const caloriesData = JSON.parse(localStorage.getItem('caloriesData')) || {};\n//   const { dateCompleted = '' } = caloriesData;\n\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   const handleSignOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('userName');\n//     localStorage.removeItem('caloriesData');\n//     navigate('/');\n//   };\n\n//   const kcalLeft = dailyRate - consumed;\n//   const percentageOfNormal = dailyRate ? ((consumed / dailyRate) * 100).toFixed(1) : 0;\n\n//   // Filtrarea alimentelor în funcție de ce introduce utilizatorul în searchTerm\n//   const filteredFoods = Array.isArray(allForbiddenFoods) \n//     ? allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())) \n//     : [];\n\n//   return (\n//     <aside className=\"rightSideBar\">\n//       <div className=\"userInfo\">\n//         <span>{userName} </span>\n//         <span className=\"separator\">|</span>\n//         <button onClick={handleSignOut} className=\"exitButton\">\n//           Exit\n//         </button>\n//       </div>\n\n//       <div className=\"summary\">\n//         <h3>Summary for {dateCompleted}</h3>\n\n//         <div className=\"summary-item\">\n//           <span className=\"summary-key\">Left </span>\n//           <span>{kcalLeft} kcal</span>\n//         </div>\n//         <div className=\"summary-item\">\n//           <span className=\"summary-key\">Consumed</span>\n//           <span>{consumed} kcal</span>\n//         </div>\n//         <div className=\"summary-item\">\n//           <span className=\"summary-key\">Daily Rate</span>\n//           <span>{dailyRate} kcal</span>\n//         </div>\n//         <div className=\"summary-item\">\n//           <span className=\"summary-key\">n% of normal</span>\n//           <span>{percentageOfNormal}</span>\n//         </div>\n//       </div>\n\n//       <div className=\"notRecommendedFoods\">\n//         <h4>Food Not Recommended</h4>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search product...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//           className=\"searchInput\"\n//         />\n\n//         <div className=\"food-list\">\n//           {filteredFoods.length > 0 ? (\n//             <ul>\n//               {filteredFoods.map((food, index) => (\n//                 <li key={index} className=\"food-item\">\n//                   {food}\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No matching products found</p>\n//           )}\n//         </div>\n//       </div>\n//     </aside>\n//   );\n// };\n\n// export default RightSideBar;\n\nimport { useNavigate } from 'react-router-dom';\nimport './RightSideBar.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useMediaQuery = query => {\n  _s();\n  const [matches, setMatches] = useState(false);\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    media.addEventListener('change', listener);\n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n  return matches;\n};\n_s(useMediaQuery, \"/aV7jSECvYA0Ea4uAEPK2AzROhs=\");\nconst RightSideBar = ({\n  dailyRate,\n  allForbiddenFoods,\n  consumed,\n  selectedDate,\n  on\n}) => {\n  _s2();\n  const kcalLeft = dailyRate - consumed;\n  const percentageOfNormal = dailyRate ? (consumed / dailyRate * 100).toFixed(1) : 0;\n  const navigate = useNavigate();\n  const userName = localStorage.getItem('userName');\n  const [searchTerm, setSearchTerm] = useState('');\n  const isTabletOrMobile = useMediaQuery({\n    maxWidth: 1280\n  });\n  const handleSignOut = () => {\n    // Ștergem doar datele specifice userului logat\n    const userName = localStorage.getItem('userName');\n    if (userName) {\n      localStorage.removeItem(`${userName}_caloriesDataByDate`);\n    }\n\n    // Ștergem token-ul, userName și selectedDate\n    localStorage.removeItem('token');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('selectedDate');\n    navigate('/');\n  };\n  const updateCalories = calories => {\n    // Logica pentru actualizarea caloriilor\n    setCalories(prev => prev + calories);\n  };\n\n  // Filtrarea alimentelor în funcție de ce introduce utilizatorul în searchTerm\n  const filteredFoods = Array.isArray(allForbiddenFoods) ? allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())) : [];\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // lunile sunt indexate de la 0\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"rightSideBar\",\n    children: [!isTabletOrMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [userName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"separator\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSignOut,\n        className: \"exitButton\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Summary for \", selectedDate ? formatDate(selectedDate) : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-key\",\n          children: \"Left \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [kcalLeft, \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-key\",\n          children: \"Consumed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [consumed, \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-key\",\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [dailyRate, \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-key\",\n          children: \"n% of normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [percentageOfNormal, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notRecommendedFoods\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Food Not Recommended\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search product...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"searchInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-list\",\n        children: filteredFoods.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filteredFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"food-item\",\n            children: food\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No matching products found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 7\n  }, this);\n};\n_s2(RightSideBar, \"gAnp78cxjssm6MyOFE0zEb9MFGY=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = RightSideBar;\nexport default RightSideBar;\nvar _c;\n$RefreshReg$(_c, \"RightSideBar\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","useMediaQuery","query","_s","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener","RightSideBar","dailyRate","allForbiddenFoods","consumed","selectedDate","on","_s2","kcalLeft","percentageOfNormal","toFixed","navigate","userName","localStorage","getItem","searchTerm","setSearchTerm","isTabletOrMobile","maxWidth","handleSignOut","removeItem","updateCalories","calories","setCalories","prev","filteredFoods","Array","isArray","filter","food","toLowerCase","includes","formatDate","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSignOut","type","placeholder","value","onChange","e","target","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/RightSideBar/RightSideBar.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './RightSideBar.css';\r\n\r\n// const RightSideBar = ({ dailyRate, consumed, allForbiddenFoods }) => {\r\n//   const navigate = useNavigate();\r\n//   const userName = localStorage.getItem('userName');\r\n//   const caloriesData = JSON.parse(localStorage.getItem('caloriesData')) || {};\r\n//   const { dateCompleted = '' } = caloriesData;\r\n\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   const handleSignOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('userName');\r\n//     localStorage.removeItem('caloriesData');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const kcalLeft = dailyRate - consumed;\r\n//   const percentageOfNormal = dailyRate ? ((consumed / dailyRate) * 100).toFixed(1) : 0;\r\n\r\n//   // Filtrarea alimentelor în funcție de ce introduce utilizatorul în searchTerm\r\n//   const filteredFoods = Array.isArray(allForbiddenFoods) \r\n//     ? allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())) \r\n//     : [];\r\n\r\n//   return (\r\n//     <aside className=\"rightSideBar\">\r\n//       <div className=\"userInfo\">\r\n//         <span>{userName} </span>\r\n//         <span className=\"separator\">|</span>\r\n//         <button onClick={handleSignOut} className=\"exitButton\">\r\n//           Exit\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"summary\">\r\n//         <h3>Summary for {dateCompleted}</h3>\r\n\r\n//         <div className=\"summary-item\">\r\n//           <span className=\"summary-key\">Left </span>\r\n//           <span>{kcalLeft} kcal</span>\r\n//         </div>\r\n//         <div className=\"summary-item\">\r\n//           <span className=\"summary-key\">Consumed</span>\r\n//           <span>{consumed} kcal</span>\r\n//         </div>\r\n//         <div className=\"summary-item\">\r\n//           <span className=\"summary-key\">Daily Rate</span>\r\n//           <span>{dailyRate} kcal</span>\r\n//         </div>\r\n//         <div className=\"summary-item\">\r\n//           <span className=\"summary-key\">n% of normal</span>\r\n//           <span>{percentageOfNormal}</span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"notRecommendedFoods\">\r\n//         <h4>Food Not Recommended</h4>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search product...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//           className=\"searchInput\"\r\n//         />\r\n\r\n//         <div className=\"food-list\">\r\n//           {filteredFoods.length > 0 ? (\r\n//             <ul>\r\n//               {filteredFoods.map((food, index) => (\r\n//                 <li key={index} className=\"food-item\">\r\n//                   {food}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           ) : (\r\n//             <p>No matching products found</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </aside>\r\n//   );\r\n// };\r\n\r\n// export default RightSideBar;\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './RightSideBar.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useMediaQuery = (query) => {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches);\r\n    }\r\n    const listener = () => setMatches(media.matches);\r\n    media.addEventListener('change', listener);\r\n    return () => media.removeEventListener('change', listener);\r\n  }, [matches, query]);\r\n\r\n  return matches;\r\n};\r\n\r\n\r\nconst RightSideBar = ({ dailyRate, allForbiddenFoods, consumed, selectedDate, on }) => {\r\n  const kcalLeft = dailyRate - consumed;\r\n  const percentageOfNormal = dailyRate ? ((consumed / dailyRate) * 100).toFixed(1) : 0;\r\n  const navigate = useNavigate();\r\n  const userName = localStorage.getItem('userName');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const isTabletOrMobile = useMediaQuery({ maxWidth: 1280 });\r\n\r\n  const handleSignOut = () => {\r\n    // Ștergem doar datele specifice userului logat\r\n    const userName = localStorage.getItem('userName');\r\n    if (userName) {\r\n      localStorage.removeItem(`${userName}_caloriesDataByDate`);\r\n    }\r\n  \r\n    // Ștergem token-ul, userName și selectedDate\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userName');\r\n    localStorage.removeItem('selectedDate');\r\n  \r\n    navigate('/');\r\n  };\r\n  \r\n\r\n  const updateCalories = (calories) => {\r\n    // Logica pentru actualizarea caloriilor\r\n    setCalories((prev) => prev + calories);\r\n  };\r\n  \r\n    // Filtrarea alimentelor în funcție de ce introduce utilizatorul în searchTerm\r\n  const filteredFoods = Array.isArray(allForbiddenFoods) \r\n    ? allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())) \r\n    : [];\r\n\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString);\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // lunile sunt indexate de la 0\r\n      const year = date.getFullYear();\r\n      return `${day}.${month}.${year}`;\r\n    };\r\n    \r\n    return (\r\n      <aside className=\"rightSideBar\">\r\n      {!isTabletOrMobile && (\r\n        <div className=\"userInfo\">\r\n          <span>{userName} </span>\r\n          <span className=\"separator\">|</span>\r\n          <button onClick={onSignOut} className=\"exitButton\">Exit</button>\r\n        </div>\r\n      )}\r\n        <div className=\"summary\">\r\n        <h3>Summary for {selectedDate ? formatDate(selectedDate) : 'N/A'}</h3>\r\n    \r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-key\">Left </span>\r\n            <span>{kcalLeft} kcal</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-key\">Consumed</span>\r\n            <span>{consumed} kcal</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-key\">Daily Rate</span>\r\n            <span>{dailyRate} kcal</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-key\">n% of normal</span>\r\n            <span>{percentageOfNormal} %</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"notRecommendedFoods\">\r\n          <h4>Food Not Recommended</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search product...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"searchInput\"\r\n          />\r\n    \r\n          <div className=\"food-list\">\r\n            {filteredFoods.length > 0 ? (\r\n              <ul>\r\n                {filteredFoods.map((food, index) => (\r\n                  <li key={index} className=\"food-item\">\r\n                    {food}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No matching products found</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </aside>\r\n    );\r\n  }\r\n\r\nexport default RightSideBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}