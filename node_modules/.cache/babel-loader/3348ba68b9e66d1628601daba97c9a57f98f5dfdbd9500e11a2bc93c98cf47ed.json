{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\n// DiaryAddProductForm.js\nimport React, { useState, useEffect } from 'react';\nimport './DiaryAddProductForm.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList,\n  allForbiddenFoods,\n  selectedDate,\n  updateCalories,\n  productList,\n  removeProduct\n}) => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [grams, setGrams] = useState('');\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n  const [allFoods, setAllFoods] = useState([]);\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  useEffect(() => {\n    const fetchForbiddenFoods = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n        setAllFoods(response.data);\n      } catch (error) {\n        console.error('Error fetching forbidden foods:', error);\n      }\n    };\n    fetchForbiddenFoods();\n  }, []);\n  useEffect(() => {\n    setFilteredForbiddenFoods(allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allForbiddenFoods]);\n  useEffect(() => {\n    setFilteredFoods(allFoods.filter(food => food.title.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allFoods]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!grams || !selectedFood) {\n      console.warn('Please select a food and enter grams.');\n      return;\n    }\n    const calories = selectedFood.calories * grams / 100;\n    const newProduct = {\n      id: Date.now(),\n      date: selectedDate,\n      name: selectedFood.title,\n      grams: parseInt(grams, 10),\n      calories: Math.round(calories)\n    };\n    addProductToList(newProduct); // Doar adăugăm în lista din părinte\n    updateCalories(Math.round(calories));\n    setProductName('');\n    setGrams('');\n    setSelectedFood(null);\n    setSearchTerm('');\n  };\n  const handleFoodSelect = food => {\n    setProductName(food.title);\n    setSelectedFood(food);\n    setSearchTerm(food.title); // Umple inputul cu numele alimentului ales\n    setFilteredFoods([]); // Golește lista de sugestii\n  };\n  const handleRemoveProduct = (id, calories) => {\n    // Apelăm funcția `removeProduct` din props\n    removeProduct(id, calories); // Apelăm funcția transmisă din DiaryPage\n    console.log('deleted'); // Afișăm în consolă\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"productForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"searchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults\",\n          children: filteredFoods.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFoodSelect(food),\n            children: [food.title, \" - \", food.calories, \" kcal/100g\"]\n          }, food._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grams\",\n        value: grams,\n        onChange: e => setGrams(e.target.value),\n        className: \"gramsInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.grams, \"g - \", product.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveProduct(product.id, product.calories),\n          className: \"removeButton\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n};\n_s(DiaryAddProductForm, \"bIoqbycu/HncJMMiyNOncGdNnHA=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './DiaryAddProductForm.css';\n\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\n//   const [productName, setProductName] = useState('');\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data); // Salvează obiectele complete în state\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n\n//   useEffect(() => {\n//     const filtered = allFoods.filter((food) =>\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredFoods(filtered);\n//   }, [searchTerm, allFoods]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!grams || !selectedFood) return;\n\n//     const calories = (selectedFood.calories * grams) / 100;\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams,\n//       calories: Math.round(calories),\n//     };\n\n//     addProductToList(newProduct);\n//     updateCalories(Math.round(calories));\n\n//     setProductName('');\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//   };\n\n//   const handleFoodSelect = (food) => {\n//     setProductName(food.title);\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredFoods.map((food) => (\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                 {food.title} - {food.calories} kcal/100g\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"submitBtn\">\n//           Add product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","allForbiddenFoods","selectedDate","updateCalories","productList","removeProduct","_s","productName","setProductName","grams","setGrams","selectedFood","setSelectedFood","searchTerm","setSearchTerm","filteredForbiddenFoods","setFilteredForbiddenFoods","allFoods","setAllFoods","filteredFoods","setFilteredFoods","fetchForbiddenFoods","response","get","data","error","console","filter","food","toLowerCase","includes","title","handleSubmit","e","preventDefault","warn","calories","newProduct","id","Date","now","date","name","parseInt","Math","round","handleFoodSelect","handleRemoveProduct","log","children","onSubmit","className","length","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","required","product","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["// DiaryAddProductForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './DiaryAddProductForm.css';\r\nimport axios from 'axios';\r\nconst DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate, updateCalories, productList, removeProduct }) => {\r\n    const [productName, setProductName] = useState('');\r\n    const [grams, setGrams] = useState('');\r\n    const [selectedFood, setSelectedFood] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  \r\n    const [allFoods, setAllFoods] = useState([]);\r\n    const [filteredFoods, setFilteredFoods] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchForbiddenFoods = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n          setAllFoods(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching forbidden foods:', error);\r\n        }\r\n      };\r\n      fetchForbiddenFoods();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      setFilteredForbiddenFoods(\r\n        allForbiddenFoods.filter((food) =>\r\n          food.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }, [searchTerm, allForbiddenFoods]);\r\n  \r\n    useEffect(() => {\r\n      setFilteredFoods(\r\n        allFoods.filter((food) =>\r\n          food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }, [searchTerm, allFoods]);\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (!grams || !selectedFood) {\r\n        console.warn('Please select a food and enter grams.');\r\n        return;\r\n      }\r\n  \r\n      const calories = (selectedFood.calories * grams) / 100;\r\n  \r\n      const newProduct = {\r\n        id: Date.now(),\r\n        date: selectedDate,\r\n        name: selectedFood.title,\r\n        grams: parseInt(grams, 10),\r\n        calories: Math.round(calories),\r\n      };\r\n  \r\n      addProductToList(newProduct); // Doar adăugăm în lista din părinte\r\n      updateCalories(Math.round(calories));\r\n  \r\n      setProductName('');\r\n      setGrams('');\r\n      setSelectedFood(null);\r\n      setSearchTerm('');\r\n    };\r\n  \r\n    const handleFoodSelect = (food) => {\r\n      setProductName(food.title);\r\n      setSelectedFood(food);\r\n      setSearchTerm(food.title); // Umple inputul cu numele alimentului ales\r\n      setFilteredFoods([]); // Golește lista de sugestii\r\n    };\r\n\r\nconst handleRemoveProduct = (id, calories) => {\r\n  // Apelăm funcția `removeProduct` din props\r\n  removeProduct(id, calories);  // Apelăm funcția transmisă din DiaryPage\r\n  console.log('deleted');  // Afișăm în consolă\r\n};\r\n\r\n      \r\n  \r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit} className=\"productForm\">\r\n          <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter product name...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"searchInput\"\r\n            />\r\n            <ul className=\"searchResults\">\r\n              {filteredFoods.map((food) => (\r\n                <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                  {food.title} - {food.calories} kcal/100g\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Grams\"\r\n            value={grams}\r\n            onChange={(e) => setGrams(e.target.value)}\r\n            className=\"gramsInput\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"addButton\">+</button>\r\n        </form>\r\n  \r\n        <ul className=\"productList\">\r\n          {productList.map((product) => (\r\n            <li key={product.id}>\r\n              {product.name} - {product.grams}g - {product.calories} kcal\r\n              <button onClick={() => handleRemoveProduct(product.id, product.calories)} className=\"removeButton\">x</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DiaryAddProductForm;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './DiaryAddProductForm.css';\r\n\r\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\r\n//   const [productName, setProductName] = useState('');\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data); // Salvează obiectele complete în state\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = allFoods.filter((food) =>\r\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredFoods(filtered);\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!grams || !selectedFood) return;\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams,\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct);\r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setProductName('');\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setProductName(food.title);\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredFoods.map((food) => (\r\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                 {food.title} - {food.calories} kcal/100g\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"submitBtn\">\r\n//           Add product\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}