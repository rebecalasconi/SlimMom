{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './DiaryAddProductForm.css';\n// import axios from 'axios';\n\n// const DiaryAddProductForm = ({\n//   addProductToList,\n//   allForbiddenFoods,\n//   selectedDate,\n//   updateCalories,\n//   productList = [],\n//   removeProduct,\n// }) => {\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data);\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n\n//   useEffect(() => {\n//     setFilteredFoods(\n//       allFoods.filter((food) =>\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//       )\n//     );\n//   }, [searchTerm, allFoods]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!grams || !selectedFood) {\n//       console.warn('Please select a food and enter grams.');\n//       return;\n//     }\n\n//     const calories = (selectedFood.calories * grams) / 100;\n\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams: parseInt(grams, 10),\n//       calories: Math.round(calories),\n//     };\n\n//     addProductToList(newProduct); \n//     updateCalories(Math.round(calories));\n\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//   };\n\n//   const handleFoodSelect = (food) => {\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n\n//   const handleRemoveProduct = (id, calories) => {\n//     removeProduct(id, calories); // actualizează și caloriile\n//   };\n\n//   return (\n//     <div className='containerProductForm'>\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Enter product name\"\n//     value={searchTerm}\n//     onChange={(e) => setSearchTerm(e.target.value)}\n//     className=\"searchInput\"\n//   />\n//   {filteredFoods.length > 0 && (\n//     <ul className=\"searchResults\">\n//       {filteredFoods\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\n//         .map((food) => (\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//             {food.title} - {food.calories} kcal/100g\n//           </li>\n//         ))}\n//     </ul>\n//   )}\n// </div>\n\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n\n//       <ul className=\"productList\">\n//   {productList.map((product) => (\n//     <li key={product.id} className=\"productRow\">\n//       <div className=\"productColumn nameColumn\">\n//         {product.name}\n//         <div className=\"line-1\"></div>\n//       </div>\n//       <div className=\"productColumn gramsColumn\">\n//         {product.grams}g\n//         <div className=\"line-2\"></div>\n//       </div>\n//       <div className=\"productColumn kcalColumn\">\n//         {product.calories} kcal\n//         <div className=\"line-3\"></div>\n//       </div>\n//       <button\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\n//         className=\"removeButton\"\n//       >\n//         x\n//       </button>\n//     </li>\n//   ))}\n// </ul>\n\n//     </div>\n//   );\n// };\n\n// export default DiaryAddProductForm;\n\n// import React, { us","map":{"version":3,"names":[],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './DiaryAddProductForm.css';\r\n// import axios from 'axios';\r\n\r\n// const DiaryAddProductForm = ({\r\n//   addProductToList,\r\n//   allForbiddenFoods,\r\n//   selectedDate,\r\n//   updateCalories,\r\n//   productList = [],\r\n//   removeProduct,\r\n// }) => {\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setFilteredFoods(\r\n//       allFoods.filter((food) =>\r\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       )\r\n//     );\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!grams || !selectedFood) {\r\n//       console.warn('Please select a food and enter grams.');\r\n//       return;\r\n//     }\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams: parseInt(grams, 10),\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct); \r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   const handleRemoveProduct = (id, calories) => {\r\n//     removeProduct(id, calories); // actualizează și caloriile\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerProductForm'>\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//   <input\r\n//     type=\"text\"\r\n//     placeholder=\"Enter product name\"\r\n//     value={searchTerm}\r\n//     onChange={(e) => setSearchTerm(e.target.value)}\r\n//     className=\"searchInput\"\r\n//   />\r\n//   {filteredFoods.length > 0 && (\r\n//     <ul className=\"searchResults\">\r\n//       {filteredFoods\r\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\r\n//         .map((food) => (\r\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//             {food.title} - {food.calories} kcal/100g\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   )}\r\n// </div>\r\n\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n\r\n//       <ul className=\"productList\">\r\n//   {productList.map((product) => (\r\n//     <li key={product.id} className=\"productRow\">\r\n//       <div className=\"productColumn nameColumn\">\r\n//         {product.name}\r\n//         <div className=\"line-1\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn gramsColumn\">\r\n//         {product.grams}g\r\n//         <div className=\"line-2\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn kcalColumn\">\r\n//         {product.calories} kcal\r\n//         <div className=\"line-3\"></div>\r\n//       </div>\r\n//       <button\r\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\r\n//         className=\"removeButton\"\r\n//       >\r\n//         x\r\n//       </button>\r\n//     </li>\r\n//   ))}\r\n// </ul>\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n\r\n\r\n// import React, { us"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}