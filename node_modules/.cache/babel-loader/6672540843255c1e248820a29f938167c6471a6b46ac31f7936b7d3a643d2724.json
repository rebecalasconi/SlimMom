{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n//   import './DiaryAddProductForm.css';\n\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\n//     const [productName, setProductName] = useState('');\n//     const [grams, setGrams] = useState('');\n//     const [foodData, setFoodData] = useState([]);\n//     const [selectedFood, setSelectedFood] = useState(null);\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n\n//     // useEffect(() => {\n//     //   if (productName.length > 2) {\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\n//     //         }\n//     //       }, [productName]);\n\n//     useEffect(() => {\n//       setFilteredForbiddenFoods(\n//         allForbiddenFoods.filter((food) =>\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\n//         )\n//       );\n//     }, [searchTerm, allForbiddenFoods]);\n\n//     const handleSubmit = (e) => {\n//       e.preventDefault();\n//       if (!grams || !selectedFood) return;\n\n//       const calories = (selectedFood.calories * grams) / 100;\n\n//       addProductToList({\n//         date: selectedDate,\n//         name: selectedFood.title,\n//         grams,\n//         calories: Math.round(calories),\n//       });\n\n//       setProductName('');\n//       setGrams('');\n//       setSelectedFood(null);\n//     };\n\n//     const handleFoodSelect = (food) => {\n//       setProductName(food);\n//       setSearchTerm(food);\n//     }\n\n//     return (\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//               <div className=\"date-picker-container\">\n//           {/* <label htmlFor=\"date\">Date:</label> */}\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\n//         </div>\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredForbiddenFoods.map((food, index) => (\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//         />\n//           <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n//     );\n//   };\n\n//   export default DiaryAddProductForm;\n\nimport React, { useState, useEffect } from 'react';\nimport './DiaryAddProductForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList,\n  allFoods,\n  selectedDate,\n  updateCalories\n}) => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [grams, setGrams] = useState('');\n  const [foodData, setFoodData] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [productList, setProductList] = useState([]);\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\n  useEffect(() => {\n    setFilteredForbiddenFoods(allForbiddenFoods.filter(food => food.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allForbiddenFoods]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!grams || !selectedFood) return;\n    const calories = selectedFood.calories * grams / 100;\n    const newProduct = {\n      id: Date.now(),\n      date: selectedDate,\n      name: selectedFood.title,\n      grams: grams,\n      calories: Math.round(calories)\n    };\n    setProductList(prevList => [...prevList, newProduct]);\n    addProductToList(newProduct);\n    updateCalories(Math.round(calories));\n    setProductName('');\n    setGrams('');\n    setSelectedFood(null);\n    setSearchTerm('');\n  };\n  const handleFoodSelect = food => {\n    setProductName(food.title);\n    setSelectedFood(food);\n    setSearchTerm(food.title);\n    setFilteredFoods([]);\n  };\n  const handleRemoveProduct = (id, calories) => {\n    setProductList(prevList => prevList.filter(product => product.id !== id));\n    updateCalories(-calories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"productForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `searchContainer ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"searchInput\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults\",\n          children: filteredFoods.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFoodSelect(food),\n            children: food.title\n          }, food._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grams\",\n        value: grams,\n        onChange: e => setGrams(e.target.value),\n        className: \"gramsInput\",\n        required: true,\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"productItem\",\n        children: [product.name, \" - \", product.grams, \"g - \", product.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveProduct(product.id, product.calories),\n          className: \"removeButton\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryAddProductForm, \"f7icR5wIfmd07R8i9xL5I1lilpI=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","allFoods","selectedDate","updateCalories","_s","productName","setProductName","grams","setGrams","foodData","setFoodData","selectedFood","setSelectedFood","searchTerm","setSearchTerm","productList","setProductList","filteredFoods","setFilteredFoods","filteredForbiddenFoods","setFilteredForbiddenFoods","allForbiddenFoods","filter","food","toLowerCase","includes","handleSubmit","e","preventDefault","calories","newProduct","id","Date","now","date","name","title","Math","round","prevList","handleFoodSelect","handleRemoveProduct","product","children","onSubmit","className","length","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","min","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n//   import './DiaryAddProductForm.css';\r\n  \r\n//   const DiaryAddProductForm = ({ addProductToList, allForbiddenFoods, selectedDate  }) => {\r\n//     const [productName, setProductName] = useState('');\r\n//     const [grams, setGrams] = useState('');\r\n//     const [foodData, setFoodData] = useState([]);\r\n//     const [selectedFood, setSelectedFood] = useState(null);\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n//     const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n  \r\n//     // useEffect(() => {\r\n//     //   if (productName.length > 2) {\r\n//     //           getFoodFromDatabase(productName).then(data => setFoodData(data));\r\n//     //         }\r\n//     //       }, [productName]);\r\n  \r\n//     useEffect(() => {\r\n//       setFilteredForbiddenFoods(\r\n//         allForbiddenFoods.filter((food) =>\r\n//           food.toLowerCase().includes(searchTerm.toLowerCase())\r\n//         )\r\n//       );\r\n//     }, [searchTerm, allForbiddenFoods]);\r\n  \r\n//     const handleSubmit = (e) => {\r\n//       e.preventDefault();\r\n//       if (!grams || !selectedFood) return;\r\n  \r\n//       const calories = (selectedFood.calories * grams) / 100;\r\n  \r\n//       addProductToList({\r\n//         date: selectedDate,\r\n//         name: selectedFood.title,\r\n//         grams,\r\n//         calories: Math.round(calories),\r\n//       });\r\n  \r\n//       setProductName('');\r\n//       setGrams('');\r\n//       setSelectedFood(null);\r\n//     };\r\n  \r\n//     const handleFoodSelect = (food) => {\r\n//       setProductName(food);\r\n//       setSearchTerm(food);\r\n//     }\r\n  \r\n//     return (\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//               <div className=\"date-picker-container\">\r\n//           {/* <label htmlFor=\"date\">Date:</label> */}\r\n//           {/* <input id=\"date\" type=\"date\" value={selectedDate} enabled /> */}\r\n//         </div>\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredForbiddenFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredForbiddenFoods.map((food, index) => (\r\n//               <li key={index} onClick={() => handleFoodSelect(food)}>{food}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//         />\r\n//           <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n//     );\r\n//   };\r\n  \r\n//   export default DiaryAddProductForm;\r\n  \r\nimport React, { useState, useEffect } from 'react';\r\nimport './DiaryAddProductForm.css';\r\n\r\nconst DiaryAddProductForm = ({ addProductToList, allFoods, selectedDate, updateCalories }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [grams, setGrams] = useState('');\r\n  const [foodData, setFoodData] = useState([]);\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [productList, setProductList] = useState([]);\r\n  const [filteredFoods, setFilteredFoods] = useState([]);\r\n  const [filteredForbiddenFoods, setFilteredForbiddenFoods] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setFilteredForbiddenFoods(\r\n        allForbiddenFoods.filter((food) =>\r\n          food.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }, [searchTerm, allForbiddenFoods]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!grams || !selectedFood) return;\r\n\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n\r\n    const newProduct = {\r\n      id: Date.now(),\r\n      date: selectedDate,\r\n      name: selectedFood.title,\r\n      grams: grams,\r\n      calories: Math.round(calories),\r\n    };\r\n\r\n    setProductList((prevList) => [...prevList, newProduct]);\r\n    addProductToList(newProduct);\r\n    updateCalories(Math.round(calories));\r\n\r\n    setProductName('');\r\n    setGrams('');\r\n    setSelectedFood(null);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const handleFoodSelect = (food) => {\r\n    setProductName(food.title);\r\n    setSelectedFood(food);\r\n    setSearchTerm(food.title);\r\n    setFilteredFoods([]);\r\n  };\r\n\r\n  const handleRemoveProduct = (id, calories) => {\r\n    setProductList((prevList) => prevList.filter((product) => product.id !== id));\r\n    updateCalories(-calories);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"productForm\">\r\n        <div className={`searchContainer ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter product name...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"searchInput\"\r\n            required\r\n          />\r\n          <ul className=\"searchResults\">\r\n            {filteredFoods.map((food) => (\r\n              <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                {food.title}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Grams\"\r\n          value={grams}\r\n          onChange={(e) => setGrams(e.target.value)}\r\n          className=\"gramsInput\"\r\n          required\r\n          min=\"1\"\r\n        />\r\n\r\n        <button type=\"submit\" className=\"addButton\">+</button>\r\n      </form>\r\n\r\n      <ul className=\"productList\">\r\n        {productList.map((product) => (\r\n          <li key={product.id} className=\"productItem\">\r\n            {product.name} - {product.grams}g - {product.calories} kcal\r\n            <button onClick={() => handleRemoveProduct(product.id, product.calories)} className=\"removeButton\">x</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC5F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACdwB,yBAAyB,CACvBC,iBAAiB,CAACC,MAAM,CAAEC,IAAI,IAC5BA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,UAAU,CAACW,WAAW,CAAC,CAAC,CACtD,CACF,CAAC;EACH,CAAC,EAAE,CAACX,UAAU,EAAEQ,iBAAiB,CAAC,CAAC;EAErC,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACrB,KAAK,IAAI,CAACI,YAAY,EAAE;IAE7B,MAAMkB,QAAQ,GAAIlB,YAAY,CAACkB,QAAQ,GAAGtB,KAAK,GAAI,GAAG;IAEtD,MAAMuB,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEhC,YAAY;MAClBiC,IAAI,EAAExB,YAAY,CAACyB,KAAK;MACxB7B,KAAK,EAAEA,KAAK;MACZsB,QAAQ,EAAEQ,IAAI,CAACC,KAAK,CAACT,QAAQ;IAC/B,CAAC;IAEDb,cAAc,CAAEuB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAET,UAAU,CAAC,CAAC;IACvD9B,gBAAgB,CAAC8B,UAAU,CAAC;IAC5B3B,cAAc,CAACkC,IAAI,CAACC,KAAK,CAACT,QAAQ,CAAC,CAAC;IAEpCvB,cAAc,CAAC,EAAE,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZI,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAM0B,gBAAgB,GAAIjB,IAAI,IAAK;IACjCjB,cAAc,CAACiB,IAAI,CAACa,KAAK,CAAC;IAC1BxB,eAAe,CAACW,IAAI,CAAC;IACrBT,aAAa,CAACS,IAAI,CAACa,KAAK,CAAC;IACzBlB,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMuB,mBAAmB,GAAGA,CAACV,EAAE,EAAEF,QAAQ,KAAK;IAC5Cb,cAAc,CAAEuB,QAAQ,IAAKA,QAAQ,CAACjB,MAAM,CAAEoB,OAAO,IAAKA,OAAO,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC7E5B,cAAc,CAAC,CAAC0B,QAAQ,CAAC;EAC3B,CAAC;EAED,oBACE/B,OAAA;IAAA6C,QAAA,gBACE7C,OAAA;MAAM8C,QAAQ,EAAElB,YAAa;MAACmB,SAAS,EAAC,aAAa;MAAAF,QAAA,gBACnD7C,OAAA;QAAK+C,SAAS,EAAE,mBAAmBhC,UAAU,IAAII,aAAa,CAAC6B,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAH,QAAA,gBAC1F7C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAEpC,UAAW;UAClBqC,QAAQ,EAAGvB,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAC/CJ,SAAS,EAAC,aAAa;UACvBO,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACF1D,OAAA;UAAI+C,SAAS,EAAC,eAAe;UAAAF,QAAA,EAC1B1B,aAAa,CAACwC,GAAG,CAAElC,IAAI,iBACtBzB,OAAA;YAAmB4D,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACjB,IAAI,CAAE;YAAAoB,QAAA,EACtDpB,IAAI,CAACa;UAAK,GADJb,IAAI,CAACoC,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEN1D,OAAA;QACEiD,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE1C,KAAM;QACb2C,QAAQ,EAAGvB,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;QAC1CJ,SAAS,EAAC,YAAY;QACtBO,QAAQ;QACRQ,GAAG,EAAC;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEF1D,OAAA;QAAQiD,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEP1D,OAAA;MAAI+C,SAAS,EAAC,aAAa;MAAAF,QAAA,EACxB5B,WAAW,CAAC0C,GAAG,CAAEf,OAAO,iBACvB5C,OAAA;QAAqB+C,SAAS,EAAC,aAAa;QAAAF,QAAA,GACzCD,OAAO,CAACP,IAAI,EAAC,KAAG,EAACO,OAAO,CAACnC,KAAK,EAAC,MAAI,EAACmC,OAAO,CAACb,QAAQ,EAAC,OACtD,eAAA/B,OAAA;UAAQ4D,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACC,OAAO,CAACX,EAAE,EAAEW,OAAO,CAACb,QAAQ,CAAE;UAACgB,SAAS,EAAC,cAAc;UAAAF,QAAA,EAAC;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFtGd,OAAO,CAACX,EAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpD,EAAA,CAlGIL,mBAAmB;AAAA8D,EAAA,GAAnB9D,mBAAmB;AAoGzB,eAAeA,mBAAmB;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}