{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./DiaryAddProductForm.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList,\n  allForbiddenFoods,\n  selectedDate,\n  updateCalories,\n  productList = [],\n  removeProduct\n}) => {\n  _s();\n  const [grams, setGrams] = useState(\"\");\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [allFoods, setAllFoods] = useState([]);\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDesktop(window.innerWidth > 768);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Actualizează starea când fereastra se redimensionează\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    const fetchForbiddenFoods = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/dailycalorieintake/forbiddenFoods\");\n        setAllFoods(response.data);\n      } catch (error) {\n        console.error(\"Error fetching forbidden foods:\", error);\n      }\n    };\n    fetchForbiddenFoods();\n  }, []);\n  useEffect(() => {\n    setFilteredFoods(allFoods.filter(food => food.title.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, allFoods]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!grams || !selectedFood) {\n      console.warn(\"Please select a food and enter grams.\");\n      return;\n    }\n    const calories = selectedFood.calories * grams / 100;\n    const newProduct = {\n      id: Date.now(),\n      date: selectedDate,\n      name: selectedFood.title,\n      grams: parseInt(grams, 10),\n      calories: Math.round(calories)\n    };\n    addProductToList(newProduct);\n    updateCalories(Math.round(calories));\n    setGrams(\"\");\n    setSelectedFood(null);\n    setSearchTerm(\"\");\n    setShowModal(false);\n  };\n  const handleFoodSelect = food => {\n    setSelectedFood(food);\n    setSearchTerm(food.title);\n    setFilteredFoods([]);\n  };\n  const handleRemoveProduct = (id, calories) => {\n    removeProduct(id, calories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerProductForm\",\n    children: [!isMobile && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"productForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter product name\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"searchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), filteredFoods.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults\",\n          children: filteredFoods.filter(food => food.title !== (selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.title)).map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFoodSelect(food),\n            children: [food.title, \" - \", food.calories, \" kcal/100g\"]\n          }, food._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grams\",\n        value: grams,\n        onChange: e => setGrams(e.target.value),\n        className: \"gramsInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"addButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobileAddButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"mobileAddButton\",\n        onClick: () => setShowModal(true),\n        children: \"Adaug\\u0103 Produs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalMobile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContentMobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"closeModal\",\n          onClick: () => setShowModal(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), showModal && console.log(\"Modalul este afișat\"), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"productFormMobile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `searchForbiddenFoodsM ${searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter product name\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"searchInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), filteredFoods.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"searchResults\",\n              children: filteredFoods.filter(food => food.title !== (selectedFood === null || selectedFood === void 0 ? void 0 : selectedFood.title)).map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleFoodSelect(food),\n                children: [food.title, \" - \", food.calories, \" kcal/100g\"]\n              }, food._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Grams\",\n            value: grams,\n            onChange: e => setGrams(e.target.value),\n            className: \"gramsInputMobile\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"addButtonMobile\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"productList\",\n      children: productList.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"productRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productColumn nameColumn\",\n          children: [product.name, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productColumn gramsColumn\",\n          children: [product.grams, \"g\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productColumn kcalColumn\",\n          children: [product.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveProduct(product.id, product.calories),\n          className: \"removeButton\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryAddProductForm, \"mAUQxwJy7XMEj2+lbaDaL6xah/o=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\n// import React, { useState, useEffect } from 'react';\n// import './DiaryAddProductForm.css';\n// import axios from 'axios';\n\n// const DiaryAddProductForm = ({\n//   addProductToList,\n//   allForbiddenFoods,\n//   selectedDate,\n//   updateCalories,\n//   productList = [],\n//   removeProduct,\n// }) => {\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n//   const [showModal, setShowModal] = useState(false); // Control vizibilitate formular pe mobil\n\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data);\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n\n//   useEffect(() => {\n//     setFilteredFoods(\n//       allFoods.filter((food) =>\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//       )\n//     );\n//   }, [searchTerm, allFoods]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!grams || !selectedFood) {\n//       console.warn('Please select a food and enter grams.');\n//       return;\n//     }\n\n//     const calories = (selectedFood.calories * grams) / 100;\n\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams: parseInt(grams, 10),\n//       calories: Math.round(calories),\n//     };\n\n//     addProductToList(newProduct); \n//     updateCalories(Math.round(calories));\n\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//     setShowModal(false); \n//   };\n\n//   const handleFoodSelect = (food) => {\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n\n//   const handleRemoveProduct = (id, calories) => {\n//     removeProduct(id, calories); // actualizează și caloriile\n//   };\n\n//   return (\n//     <div className='containerProductForm'>\n//        {(showModal || window.innerWidth > 768) && (\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Enter product name\"\n//     value={searchTerm}\n//     onChange={(e) => setSearchTerm(e.target.value)}\n//     className=\"searchInput\"\n//   />\n//   {filteredFoods.length > 0 && (\n//     <ul className=\"searchResults\">\n//       {filteredFoods\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\n//         .map((food) => (\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//             {food.title} - {food.calories} kcal/100g\n//           </li>\n//         ))}\n//     </ul>\n//   )}\n// </div>\n\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"addButton\">+</button>\n//       </form>\n//  )}\n//        {/* Buton vizibil doar pe mobil */}\n//       <div className=\"mobileAddButtonContainer\">\n//         <button type=\"button\" className=\"mobileAddButton\"  onClick={() => setShowModal(true)}>\n//           {showModal ? \"Ascunde Formularul\" : \"Adaugă Produs\"}\n//         </button>\n//       </div>\n//        {/* Modal pentru mobil */}\n//        {showModal && (\n//         <div className=\"modal\">\n//           <div className=\"modalContent\">\n//             <button className=\"closeModal\" onClick={() => setShowModal(false)}>\n//               ✖\n//             </button>\n//             <form onSubmit={handleSubmit} className=\"productForm\">\n//               <div\n//                 className={`searchForbiddenFoods ${\n//                   searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\n//                 }`}\n//               >\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name\"\n//                   value={searchTerm}\n//                   onChange={(e) => setSearchTerm(e.target.value)}\n//                   className=\"searchInput\"\n//                 />\n//                 {filteredFoods.length > 0 && (\n//                   <ul className=\"searchResults\">\n//                     {filteredFoods\n//                       .filter((food) => food.title !== selectedFood?.title)\n//                       .map((food) => (\n//                         <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                           {food.title} - {food.calories} kcal/100g\n//                         </li>\n//                       ))}\n//                   </ul>\n//                 )}\n//               </div>\n\n//               <input\n//                 type=\"number\"\n//                 placeholder=\"Grams\"\n//                 value={grams}\n//                 onChange={(e) => setGrams(e.target.value)}\n//                 className=\"gramsInput\"\n//                 required\n//               />\n//               <button type=\"submit\" className=\"addButton\">\n//                 +\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <ul className=\"productList\">\n//   {productList.map((product) => (\n//     <li key={product.id} className=\"productRow\">\n//       <div className=\"productColumn nameColumn\">\n//         {product.name}\n//         <div className=\"line-1\"></div>\n//       </div>\n//       <div className=\"productColumn gramsColumn\">\n//         {product.grams}g\n//         <div className=\"line-2\"></div>\n//       </div>\n//       <div className=\"productColumn kcalColumn\">\n//         {product.calories} kcal\n//         <div className=\"line-3\"></div>\n//       </div>\n//       <button\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\n//         className=\"removeButton\"\n//       >\n//         x\n//       </button>\n//     </li>\n//   ))}\n// </ul>\n\n//     </div>\n\n//   );\n// };\n\n// export default DiaryAddProductForm;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './DiaryAddProductForm.css';\n\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\n//   const [productName, setProductName] = useState('');\n//   const [grams, setGrams] = useState('');\n//   const [selectedFood, setSelectedFood] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [allFoods, setAllFoods] = useState([]);\n//   const [filteredFoods, setFilteredFoods] = useState([]);\n\n//   useEffect(() => {\n//     const fetchForbiddenFoods = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\n//         setAllFoods(response.data); // Salvează obiectele complete în state\n//       } catch (error) {\n//         console.error('Error fetching forbidden foods:', error);\n//       }\n//     };\n//     fetchForbiddenFoods();\n//   }, []);\n\n//   useEffect(() => {\n//     const filtered = allFoods.filter((food) =>\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredFoods(filtered);\n//   }, [searchTerm, allFoods]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!grams || !selectedFood) return;\n\n//     const calories = (selectedFood.calories * grams) / 100;\n//     const newProduct = {\n//       id: Date.now(),\n//       date: selectedDate,\n//       name: selectedFood.title,\n//       grams,\n//       calories: Math.round(calories),\n//     };\n\n//     addProductToList(newProduct);\n//     updateCalories(Math.round(calories));\n\n//     setProductName('');\n//     setGrams('');\n//     setSelectedFood(null);\n//     setSearchTerm('');\n//   };\n\n//   const handleFoodSelect = (food) => {\n//     setProductName(food.title);\n//     setSelectedFood(food);\n//     setSearchTerm(food.title);\n//     setFilteredFoods([]);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit} className=\"productForm\">\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter product name...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             className=\"searchInput\"\n//           />\n//           <ul className=\"searchResults\">\n//             {filteredFoods.map((food) => (\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\n//                 {food.title} - {food.calories} kcal/100g\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Grams\"\n//           value={grams}\n//           onChange={(e) => setGrams(e.target.value)}\n//           className=\"gramsInput\"\n//           required\n//         />\n//         <button type=\"submit\" className=\"submitBtn\">\n//           Add product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","allForbiddenFoods","selectedDate","updateCalories","productList","removeProduct","_s","grams","setGrams","selectedFood","setSelectedFood","searchTerm","setSearchTerm","allFoods","setAllFoods","filteredFoods","setFilteredFoods","showModal","setShowModal","isMobile","setIsMobile","window","innerWidth","isDesktop","setIsDesktop","handleResize","addEventListener","removeEventListener","fetchForbiddenFoods","response","get","data","error","console","filter","food","title","toLowerCase","includes","handleSubmit","e","preventDefault","warn","calories","newProduct","id","Date","now","date","name","parseInt","Math","round","handleFoodSelect","handleRemoveProduct","className","children","onSubmit","length","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","required","log","product","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DiaryAddProductForm.css\";\r\nimport axios from \"axios\";\r\n\r\nconst DiaryAddProductForm = ({\r\n  addProductToList,\r\n  allForbiddenFoods,\r\n  selectedDate,\r\n  updateCalories,\r\n  productList = [],\r\n  removeProduct,\r\n}) => {\r\n  const [grams, setGrams] = useState(\"\");\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [allFoods, setAllFoods] = useState([]);\r\n  const [filteredFoods, setFilteredFoods] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n\r\nuseEffect(() => {\r\n  const handleResize = () => {\r\n    setIsDesktop(window.innerWidth > 768);\r\n  };\r\n\r\n  window.addEventListener(\"resize\", handleResize);\r\n  return () => window.removeEventListener(\"resize\", handleResize);\r\n}, []);\r\n\r\n\r\n  // Actualizează starea când fereastra se redimensionează\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchForbiddenFoods = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/dailycalorieintake/forbiddenFoods\"\r\n        );\r\n        setAllFoods(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching forbidden foods:\", error);\r\n      }\r\n    };\r\n    fetchForbiddenFoods();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredFoods(\r\n      allFoods.filter((food) =>\r\n        food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchTerm, allFoods]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!grams || !selectedFood) {\r\n      console.warn(\"Please select a food and enter grams.\");\r\n      return;\r\n    }\r\n\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n\r\n    const newProduct = {\r\n      id: Date.now(),\r\n      date: selectedDate,\r\n      name: selectedFood.title,\r\n      grams: parseInt(grams, 10),\r\n      calories: Math.round(calories),\r\n    };\r\n\r\n    addProductToList(newProduct);\r\n    updateCalories(Math.round(calories));\r\n\r\n    setGrams(\"\");\r\n    setSelectedFood(null);\r\n    setSearchTerm(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleFoodSelect = (food) => {\r\n    setSelectedFood(food);\r\n    setSearchTerm(food.title);\r\n    setFilteredFoods([]);\r\n  };\r\n\r\n  const handleRemoveProduct = (id, calories) => {\r\n    removeProduct(id, calories);\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerProductForm\">\r\n      {/* Formular pentru desktop și tabletă */}\r\n      {!isMobile && (\r\n        <form onSubmit={handleSubmit} className=\"productForm\">\r\n          <div\r\n            className={`searchForbiddenFoods ${\r\n              searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter product name\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"searchInput\"\r\n            />\r\n            {filteredFoods.length > 0 && (\r\n              <ul className=\"searchResults\">\r\n                {filteredFoods\r\n                  .filter((food) => food.title !== selectedFood?.title)\r\n                  .map((food) => (\r\n                    <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                      {food.title} - {food.calories} kcal/100g\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Grams\"\r\n            value={grams}\r\n            onChange={(e) => setGrams(e.target.value)}\r\n            className=\"gramsInput\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"addButton\">\r\n            +\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      {/* Buton vizibil doar pe mobil */}\r\n      {isMobile && (\r\n        <div className=\"mobileAddButtonContainer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"mobileAddButton\"\r\n            onClick={() => setShowModal(true)}\r\n          >\r\n            Adaugă Produs\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n{showModal && (\r\n\r\n        <div className=\"modalMobile\">\r\n          <div className=\"modalContentMobile\">\r\n            <button className=\"closeModal\" onClick={() => setShowModal(false)}>\r\n              ✖\r\n            </button>\r\n            {showModal && console.log(\"Modalul este afișat\")}\r\n\r\n            <form onSubmit={handleSubmit} className=\"productFormMobile\">\r\n              <div\r\n                className={`searchForbiddenFoodsM ${\r\n                  searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter product name\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"searchInput\"\r\n                />\r\n                {filteredFoods.length > 0 && (\r\n                  <ul className=\"searchResults\">\r\n                    {filteredFoods\r\n                      .filter((food) => food.title !== selectedFood?.title)\r\n                      .map((food) => (\r\n                        <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n                          {food.title} - {food.calories} kcal/100g\r\n                        </li>\r\n                      ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Grams\"\r\n                value={grams}\r\n                onChange={(e) => setGrams(e.target.value)}\r\n                className=\"gramsInputMobile\"\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"addButtonMobile\">\r\n                +\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Lista produselor */}\r\n      <ul className=\"productList\">\r\n        {productList.map((product) => (\r\n          <li key={product.id} className=\"productRow\">\r\n            <div className=\"productColumn nameColumn\">\r\n              {product.name}\r\n              <div className=\"line-1\"></div>\r\n            </div>\r\n            <div className=\"productColumn gramsColumn\">\r\n              {product.grams}g\r\n              <div className=\"line-2\"></div>\r\n            </div>\r\n            <div className=\"productColumn kcalColumn\">\r\n              {product.calories} kcal\r\n              <div className=\"line-3\"></div>\r\n            </div>\r\n            <button\r\n              onClick={() => handleRemoveProduct(product.id, product.calories)}\r\n              className=\"removeButton\"\r\n            >\r\n              x\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './DiaryAddProductForm.css';\r\n// import axios from 'axios';\r\n\r\n// const DiaryAddProductForm = ({\r\n//   addProductToList,\r\n//   allForbiddenFoods,\r\n//   selectedDate,\r\n//   updateCalories,\r\n//   productList = [],\r\n//   removeProduct,\r\n// }) => {\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false); // Control vizibilitate formular pe mobil\r\n\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setFilteredFoods(\r\n//       allFoods.filter((food) =>\r\n//         food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       )\r\n//     );\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!grams || !selectedFood) {\r\n//       console.warn('Please select a food and enter grams.');\r\n//       return;\r\n//     }\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams: parseInt(grams, 10),\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct); \r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//     setShowModal(false); \r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   const handleRemoveProduct = (id, calories) => {\r\n//     removeProduct(id, calories); // actualizează și caloriile\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerProductForm'>\r\n//        {(showModal || window.innerWidth > 768) && (\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//       <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//   <input\r\n//     type=\"text\"\r\n//     placeholder=\"Enter product name\"\r\n//     value={searchTerm}\r\n//     onChange={(e) => setSearchTerm(e.target.value)}\r\n//     className=\"searchInput\"\r\n//   />\r\n//   {filteredFoods.length > 0 && (\r\n//     <ul className=\"searchResults\">\r\n//       {filteredFoods\r\n//         .filter((food) => food.title !== selectedFood?.title) // Filtrăm alimentul deja selectat\r\n//         .map((food) => (\r\n//           <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//             {food.title} - {food.calories} kcal/100g\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   )}\r\n// </div>\r\n\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"addButton\">+</button>\r\n//       </form>\r\n//  )}\r\n//        {/* Buton vizibil doar pe mobil */}\r\n//       <div className=\"mobileAddButtonContainer\">\r\n//         <button type=\"button\" className=\"mobileAddButton\"  onClick={() => setShowModal(true)}>\r\n//           {showModal ? \"Ascunde Formularul\" : \"Adaugă Produs\"}\r\n//         </button>\r\n//       </div>\r\n//        {/* Modal pentru mobil */}\r\n//        {showModal && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modalContent\">\r\n//             <button className=\"closeModal\" onClick={() => setShowModal(false)}>\r\n//               ✖\r\n//             </button>\r\n//             <form onSubmit={handleSubmit} className=\"productForm\">\r\n//               <div\r\n//                 className={`searchForbiddenFoods ${\r\n//                   searchTerm && filteredFoods.length > 0 ? \"active\" : \"\"\r\n//                 }`}\r\n//               >\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Enter product name\"\r\n//                   value={searchTerm}\r\n//                   onChange={(e) => setSearchTerm(e.target.value)}\r\n//                   className=\"searchInput\"\r\n//                 />\r\n//                 {filteredFoods.length > 0 && (\r\n//                   <ul className=\"searchResults\">\r\n//                     {filteredFoods\r\n//                       .filter((food) => food.title !== selectedFood?.title)\r\n//                       .map((food) => (\r\n//                         <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                           {food.title} - {food.calories} kcal/100g\r\n//                         </li>\r\n//                       ))}\r\n//                   </ul>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Grams\"\r\n//                 value={grams}\r\n//                 onChange={(e) => setGrams(e.target.value)}\r\n//                 className=\"gramsInput\"\r\n//                 required\r\n//               />\r\n//               <button type=\"submit\" className=\"addButton\">\r\n//                 +\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <ul className=\"productList\">\r\n//   {productList.map((product) => (\r\n//     <li key={product.id} className=\"productRow\">\r\n//       <div className=\"productColumn nameColumn\">\r\n//         {product.name}\r\n//         <div className=\"line-1\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn gramsColumn\">\r\n//         {product.grams}g\r\n//         <div className=\"line-2\"></div>\r\n//       </div>\r\n//       <div className=\"productColumn kcalColumn\">\r\n//         {product.calories} kcal\r\n//         <div className=\"line-3\"></div>\r\n//       </div>\r\n//       <button\r\n//         onClick={() => handleRemoveProduct(product.id, product.calories)}\r\n//         className=\"removeButton\"\r\n//       >\r\n//         x\r\n//       </button>\r\n//     </li>\r\n//   ))}\r\n// </ul>\r\n\r\n//     </div>\r\n  \r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './DiaryAddProductForm.css';\r\n\r\n// const DiaryAddProductForm = ({ addProductToList, selectedDate, updateCalories }) => {\r\n//   const [productName, setProductName] = useState('');\r\n//   const [grams, setGrams] = useState('');\r\n//   const [selectedFood, setSelectedFood] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [allFoods, setAllFoods] = useState([]);\r\n//   const [filteredFoods, setFilteredFoods] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchForbiddenFoods = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/dailycalorieintake/forbiddenFoods');\r\n//         setAllFoods(response.data); // Salvează obiectele complete în state\r\n//       } catch (error) {\r\n//         console.error('Error fetching forbidden foods:', error);\r\n//       }\r\n//     };\r\n//     fetchForbiddenFoods();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = allFoods.filter((food) =>\r\n//       food.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredFoods(filtered);\r\n//   }, [searchTerm, allFoods]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!grams || !selectedFood) return;\r\n\r\n//     const calories = (selectedFood.calories * grams) / 100;\r\n//     const newProduct = {\r\n//       id: Date.now(),\r\n//       date: selectedDate,\r\n//       name: selectedFood.title,\r\n//       grams,\r\n//       calories: Math.round(calories),\r\n//     };\r\n\r\n//     addProductToList(newProduct);\r\n//     updateCalories(Math.round(calories));\r\n\r\n//     setProductName('');\r\n//     setGrams('');\r\n//     setSelectedFood(null);\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const handleFoodSelect = (food) => {\r\n//     setProductName(food.title);\r\n//     setSelectedFood(food);\r\n//     setSearchTerm(food.title);\r\n//     setFilteredFoods([]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit} className=\"productForm\">\r\n//         <div className={`searchForbiddenFoods ${searchTerm && filteredFoods.length > 0 ? 'active' : ''}`}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter product name...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             className=\"searchInput\"\r\n//           />\r\n//           <ul className=\"searchResults\">\r\n//             {filteredFoods.map((food) => (\r\n//               <li key={food._id} onClick={() => handleFoodSelect(food)}>\r\n//                 {food.title} - {food.calories} kcal/100g\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Grams\"\r\n//           value={grams}\r\n//           onChange={(e) => setGrams(e.target.value)}\r\n//           className=\"gramsInput\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" className=\"submitBtn\">\r\n//           Add product\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DiaryAddProductForm;\r\n\r\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}