{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\pages\\\\DiaryPage\\\\DiaryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\nimport Header from '../../components/Header/Header';\nimport './DiaryPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryPage = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    height: '',\n    age: '',\n    currentWeight: '',\n    desiredWeight: '',\n    bloodType: '1'\n  });\n  const [dailyData, setDailyData] = useState(() => {\n    return JSON.parse(localStorage.getItem('dailyData')) || {};\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [dailyRate, setDailyRate] = useState(0);\n  const [consumed, setConsumed] = useState(0);\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productList, setProductList] = useState([]);\n  //   const [selectedDate, setSelectedDate] = useState('');\n  const [isUserSelectedDate, setIsUserSelectedDate] = useState(false);\n  const getUserKey = key => {\n    const userName = localStorage.getItem('userName');\n    return userName ? `${userName}_${key}` : key;\n  };\n  useEffect(() => {\n    // Preia data salvată din localStorage\n\n    const storedSelectedDate = localStorage.getItem('selectedDate');\n    console.log(stored);\n    if (storedSelectedDate) {\n      setSelectedDate(storedSelectedDate); // Setează data din localStorage\n    } else {\n      setSelectedDate(new Date().toISOString().split('T')[0]); // Dacă nu există, folosește data curentă\n    }\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\n    if (storedData) {\n      setDailyRate(storedData.dailyRate || 0);\n      setConsumed(storedData.consumed || 0);\n      setForbiddenFoods(storedData.forbiddenFoods || []);\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\n    }\n    if (storedFormData) {\n      setUserData(storedFormData);\n    }\n  }, []);\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split('-');\n    return `${day}.${month}.${year}`; // Formatul corect: dd.MM.yyyy\n  };\n  const updateCalories = calories => {\n    // Logica pentru actualizarea caloriilor\n    setConsumed(consumed + calories);\n  };\n\n  //   const handleDateChange = (e) => {\n  //     setSelectedDate(e.target.value);\n  //     setIsUserSelectedDate(true);\n  //   };\n\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    setIsUserSelectedDate(true);\n\n    // Salvează data în localStorage\n    localStorage.setItem('selectedDate', newDate);\n\n    // Verifică dacă există date salvate pentru noua dată\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\n    const dataForSelectedDate = savedData[newDate] || {\n      products: [],\n      consumed: 0\n    };\n    setProducts(dataForSelectedDate.products);\n    setConsumed(dataForSelectedDate.consumed);\n  };\n  const saveDataForDate = (date, products, consumed) => {\n    const userKey = getUserKey('caloriesDataByDate');\n    const existingData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const updatedData = {\n      ...existingData,\n      [date]: {\n        products,\n        consumed\n      }\n    };\n    // setDailyData(updatedData);\n    // localStorage.setItem('dailyData', JSON.stringify(updatedData));\n    localStorage.setItem(userKey, JSON.stringify(updatedData));\n  };\n  const addProductToList = product => {\n    const updatedProducts = [...products, product];\n    const updatedConsumed = consumed + product.calories;\n    setProducts(updatedProducts);\n    setConsumed(updatedConsumed);\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\n  };\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\n    savedData[selectedDate] = {\n      products,\n      consumed\n    };\n    localStorage.setItem('caloriesDataByDate', JSON.stringify(savedData));\n  }, [products, consumed, selectedDate]);\n  const handleRemoveProduct = (id, calories) => {\n    const updatedProducts = products.filter(product => product.id !== id);\n    const updatedConsumed = consumed - calories;\n    setProducts(updatedProducts);\n    setConsumed(updatedConsumed);\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\n  };\n\n  // const addProductToList = (newProduct) => {\n  //   setProductList((prevList) => [...prevList, newProduct]);\n  // };\n\n  useEffect(() => {\n    const userKey = getUserKey('caloriesDataByDate');\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\n    const dataForSelectedDate = savedData[selectedDate] || {\n      products: [],\n      consumed: 0\n    };\n    setProducts(dataForSelectedDate.products);\n    setConsumed(dataForSelectedDate.consumed);\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftPanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datePickerContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"selectedDate\",\n            children: isUserSelectedDate ? formatDate(selectedDate) : selectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"calendarLabel\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"date\",\n            type: \"date\",\n            className: \"calendarPicker\",\n            value: selectedDate,\n            onChange: handleDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiaryAddProductForm, {\n          addProductToList: addProductToList,\n          allForbiddenFoods: allForbiddenFoods,\n          selectedDate: selectedDate,\n          updateCalories: updateCalories,\n          productList: products,\n          removeProduct: handleRemoveProduct // Asigură-te că este transmis corect în props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightPanel\",\n        children: /*#__PURE__*/_jsxDEV(RightSideBar, {\n          dailyRate: dailyRate,\n          consumed: consumed,\n          forbiddenFoods: forbiddenFoods,\n          allForbiddenFoods: allForbiddenFoods,\n          selectedDate: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DiaryPage, \"TFo4t/toroDU7RkgrSq40K4OsF0=\");\n_c = DiaryPage;\nexport default DiaryPage;\nvar _c;\n$RefreshReg$(_c, \"DiaryPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DiaryAddProductForm","DiaryProductsList","RightSideBar","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","DiaryPage","_s","userData","setUserData","height","age","currentWeight","desiredWeight","bloodType","dailyData","setDailyData","JSON","parse","localStorage","getItem","selectedDate","setSelectedDate","Date","toISOString","split","dailyRate","setDailyRate","consumed","setConsumed","forbiddenFoods","setForbiddenFoods","allForbiddenFoods","setAllForbiddenFoods","products","setProducts","productList","setProductList","isUserSelectedDate","setIsUserSelectedDate","getUserKey","key","userName","storedSelectedDate","console","log","stored","storedData","storedFormData","formatDate","dateString","year","month","day","updateCalories","calories","handleDateChange","e","newDate","target","value","setItem","savedData","dataForSelectedDate","saveDataForDate","date","userKey","existingData","updatedData","stringify","addProductToList","product","updatedProducts","updatedConsumed","handleRemoveProduct","id","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","onChange","removeProduct","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DiaryAddProductForm from '../../components/DiaryAddProductForm/DiaryAddProductForm';\r\nimport DiaryProductsList from '../../components/DiaryProductsList/DiaryProductsList';\r\nimport RightSideBar from '../../components/RightSideBar/RightSideBar';\r\nimport Header from '../../components/Header/Header';\r\nimport './DiaryPage.css';\r\n\r\nconst DiaryPage = () => {\r\n  const [userData, setUserData] = useState({\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    desiredWeight: '',\r\n    bloodType: '1',\r\n  });\r\n\r\n  const [dailyData, setDailyData] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('dailyData')) || {};\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [dailyRate, setDailyRate] = useState(0);\r\n  const [consumed, setConsumed] = useState(0);\r\n  const [forbiddenFoods, setForbiddenFoods] = useState([]);\r\n  const [allForbiddenFoods, setAllForbiddenFoods] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n//   const [selectedDate, setSelectedDate] = useState('');\r\n  const [isUserSelectedDate, setIsUserSelectedDate] = useState(false); \r\n\r\n  const getUserKey = (key) => {\r\n    const userName = localStorage.getItem('userName');\r\n    return userName ? `${userName}_${key}` : key;\r\n  };\r\n  useEffect(() => {\r\n    // Preia data salvată din localStorage\r\n    \r\n    const storedSelectedDate = localStorage.getItem('selectedDate');\r\n    console.log(stored)\r\n  \r\n    if (storedSelectedDate) {\r\n      setSelectedDate(storedSelectedDate); // Setează data din localStorage\r\n    } else {\r\n      setSelectedDate(new Date().toISOString().split('T')[0]);  // Dacă nu există, folosește data curentă\r\n    }\r\n  \r\n    const storedData = JSON.parse(localStorage.getItem('caloriesData'));\r\n    const storedFormData = JSON.parse(localStorage.getItem('calorieFormData'));\r\n  \r\n    if (storedData) {\r\n      setDailyRate(storedData.dailyRate || 0);\r\n      setConsumed(storedData.consumed || 0);\r\n      setForbiddenFoods(storedData.forbiddenFoods || []);\r\n      setAllForbiddenFoods(storedData.allForbiddenFoods || []);\r\n    }\r\n  \r\n    if (storedFormData) {\r\n      setUserData(storedFormData);\r\n    }\r\n  }, []);\r\n  \r\n\r\n  const formatDate = (dateString) => {\r\n    const [year, month, day] = dateString.split('-');\r\n    return `${day}.${month}.${year}`; // Formatul corect: dd.MM.yyyy\r\n  };\r\n  \r\n  const updateCalories = (calories) => {\r\n    // Logica pentru actualizarea caloriilor\r\n    setConsumed(consumed + calories);\r\n  };\r\n\r\n//   const handleDateChange = (e) => {\r\n//     setSelectedDate(e.target.value);\r\n//     setIsUserSelectedDate(true);\r\n//   };\r\n\r\nconst handleDateChange = (e) => {\r\n    const newDate = e.target.value;\r\n    setSelectedDate(newDate);\r\n    setIsUserSelectedDate(true);\r\n    \r\n    // Salvează data în localStorage\r\n    localStorage.setItem('selectedDate', newDate);\r\n  \r\n    // Verifică dacă există date salvate pentru noua dată\r\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\r\n    const dataForSelectedDate = savedData[newDate] || { products: [], consumed: 0 };\r\n  \r\n    setProducts(dataForSelectedDate.products);\r\n    setConsumed(dataForSelectedDate.consumed);\r\n  };\r\n  \r\n  const saveDataForDate = (date, products, consumed) => {\r\n    const userKey = getUserKey('caloriesDataByDate');\r\n    const existingData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n    \r\n    const updatedData = {\r\n      ...existingData,\r\n      [date]: { products, consumed },\r\n    };\r\n    // setDailyData(updatedData);\r\n    // localStorage.setItem('dailyData', JSON.stringify(updatedData));\r\n    localStorage.setItem(userKey, JSON.stringify(updatedData));\r\n  };\r\n\r\n  const addProductToList = (product) => {\r\n    const updatedProducts = [...products, product];\r\n    const updatedConsumed = consumed + product.calories;\r\n    setProducts(updatedProducts);\r\n    setConsumed(updatedConsumed);\r\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedData = JSON.parse(localStorage.getItem('caloriesDataByDate')) || {};\r\n  \r\n    savedData[selectedDate] = {\r\n      products,\r\n      consumed,\r\n    };\r\n  \r\n    localStorage.setItem('caloriesDataByDate', JSON.stringify(savedData));\r\n  }, [products, consumed, selectedDate]);\r\n  \r\n  const handleRemoveProduct = (id, calories) => {\r\n    const updatedProducts = products.filter((product) => product.id !== id);\r\n    const updatedConsumed = consumed - calories;\r\n    setProducts(updatedProducts);\r\n    setConsumed(updatedConsumed);\r\n    saveDataForDate(selectedDate, updatedProducts, updatedConsumed);\r\n  };\r\n\r\n// const addProductToList = (newProduct) => {\r\n//   setProductList((prevList) => [...prevList, newProduct]);\r\n// };\r\n\r\nuseEffect(() => {\r\n    const userKey = getUserKey('caloriesDataByDate');\r\n    const savedData = JSON.parse(localStorage.getItem(userKey)) || {};\r\n    \r\n    const dataForSelectedDate = savedData[selectedDate] || { products: [], consumed: 0 };\r\n    \r\n    setProducts(dataForSelectedDate.products);\r\n    setConsumed(dataForSelectedDate.consumed);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"leftPanel\">\r\n          <div className=\"datePickerContainer\">\r\n          <p className=\"selectedDate\">\r\n          {isUserSelectedDate ? formatDate(selectedDate) : selectedDate}</p>\r\n            <label htmlFor=\"date\" className=\"calendarLabel\">\r\n              📅\r\n            </label>\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              className=\"calendarPicker\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </div>\r\n\r\n          <DiaryAddProductForm\r\n  addProductToList={addProductToList}\r\n  allForbiddenFoods={allForbiddenFoods}\r\n  selectedDate={selectedDate}\r\n  updateCalories={updateCalories}\r\n  productList={products}\r\n  removeProduct={handleRemoveProduct} // Asigură-te că este transmis corect în props\r\n/>\r\n\r\n        </div>\r\n\r\n        <div className=\"rightPanel\">\r\n          <RightSideBar\r\n            dailyRate={dailyRate}\r\n            consumed={consumed}\r\n            forbiddenFoods={forbiddenFoods}\r\n            allForbiddenFoods={allForbiddenFoods}\r\n            selectedDate={selectedDate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}