{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\SlimMom\\\\src\\\\components\\\\DiaryAddProductForm\\\\DiaryAddProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryAddProductForm = ({\n  addProductToList\n}) => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [grams, setGrams] = useState('');\n  const [foodData, setFoodData] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  useEffect(() => {\n    if (productName.length > 2) {\n      // Căutăm alimentele care se potrivesc cu ceea ce tastează utilizatorul\n      fetch(`/api/foods?name=${productName}`).then(response => response.json()).then(data => setFoodData(data)).catch(error => console.error('Error fetching food data:', error));\n    } else {\n      setFoodData([]); // Dacă nu se scrie nimic, golim lista de alimente\n    }\n  }, [productName]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!grams || !selectedFood) return;\n\n    // Calculăm caloriile pe baza greutății\n    const calories = selectedFood.calories * grams / 100;\n\n    // Adăugăm produsul în lista de produse\n    addProductToList({\n      name: selectedFood.title,\n      grams,\n      calories: Math.round(calories) // Rotunjim la cel mai apropiat întreg\n    });\n\n    // Resetăm formularul\n    setProductName('');\n    setGrams('');\n    setSelectedFood(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [productName && foodData.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"food-suggestions\",\n      children: foodData.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setSelectedFood(food),\n        children: [food.title, \" - \", food.calories, \" kcal / 100g\"]\n      }, food._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Grams\",\n      value: grams,\n      onChange: e => setGrams(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryAddProductForm, \"Xf89XeNYm10shmJl3QYHLYKUwnU=\");\n_c = DiaryAddProductForm;\nexport default DiaryAddProductForm;\nvar _c;\n$RefreshReg$(_c, \"DiaryAddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DiaryAddProductForm","addProductToList","_s","productName","setProductName","grams","setGrams","foodData","setFoodData","selectedFood","setSelectedFood","length","fetch","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","calories","name","title","Math","round","onSubmit","children","className","map","food","onClick","_id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/rebec/Desktop/SlimMom/src/components/DiaryAddProductForm/DiaryAddProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DiaryAddProductForm = ({ addProductToList }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [grams, setGrams] = useState('');\r\n  const [foodData, setFoodData] = useState([]);\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (productName.length > 2) {\r\n      // Căutăm alimentele care se potrivesc cu ceea ce tastează utilizatorul\r\n      fetch(`/api/foods?name=${productName}`)\r\n        .then(response => response.json())\r\n        .then(data => setFoodData(data))\r\n        .catch(error => console.error('Error fetching food data:', error));\r\n    } else {\r\n      setFoodData([]); // Dacă nu se scrie nimic, golim lista de alimente\r\n    }\r\n  }, [productName]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!grams || !selectedFood) return;\r\n\r\n    // Calculăm caloriile pe baza greutății\r\n    const calories = (selectedFood.calories * grams) / 100;\r\n    \r\n    // Adăugăm produsul în lista de produse\r\n    addProductToList({\r\n      name: selectedFood.title,\r\n      grams,\r\n      calories: Math.round(calories), // Rotunjim la cel mai apropiat întreg\r\n    });\r\n\r\n    // Resetăm formularul\r\n    setProductName('');\r\n    setGrams('');\r\n    setSelectedFood(null);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      \r\n      {productName && foodData.length > 0 && (\r\n        <ul className=\"food-suggestions\">\r\n          {foodData.map((food) => (\r\n            <li key={food._id} onClick={() => setSelectedFood(food)}>\r\n              {food.title} - {food.calories} kcal / 100g\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Grams\"\r\n        value={grams}\r\n        onChange={(e) => setGrams(e.target.value)}\r\n      />\r\n      <button type=\"submit\">+</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}